{
    "project": {
        "name": "bimviews",
        "description": "A WebGL-based IFC Viewer for BIMSurfer",
        "version": "2.0.0",
        "url": "http://bimwiews.org/",
        "logo": "../assets/images/logo.png"
    },
    "files": {
        "src/viewer/animation/_module.js": {
            "name": "src/viewer/animation/_module.js",
            "modules": {
                "animation": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/animation/cameraFlyAnimation.js": {
            "name": "src/viewer/animation/cameraFlyAnimation.js",
            "modules": {},
            "classes": {
                "CameraFlyAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/animation/cameraPathAnimation.js": {
            "name": "src/viewer/animation/cameraPathAnimation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/camera/_module.js": {
            "name": "src/viewer/camera/_module.js",
            "modules": {
                "camera": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/camera/camera.js": {
            "name": "src/viewer/camera/camera.js",
            "modules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/canvas/_module.js": {
            "name": "src/viewer/canvas/_module.js",
            "modules": {
                "canvas": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/canvas/canvas.js": {
            "name": "src/viewer/canvas/canvas.js",
            "modules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/configs/_module.js": {
            "name": "src/viewer/configs/_module.js",
            "modules": {
                "configs": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/configs/configs.js": {
            "name": "src/viewer/configs/configs.js",
            "modules": {},
            "classes": {
                "Configs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/configs/constants.js": {
            "name": "src/viewer/configs/constants.js",
            "modules": {},
            "classes": {
                "BIMSURFER.constants": 1
            },
            "fors": {},
            "namespaces": {
                "BIMSURFER": 1
            }
        },
        "src/viewer/effects/_module.js": {
            "name": "src/viewer/effects/_module.js",
            "modules": {
                "effects": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/anaglyph.js": {
            "name": "src/viewer/effects/anaglyph.js",
            "modules": {},
            "classes": {
                "Anaglyph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/depthOfField.js": {
            "name": "src/viewer/effects/depthOfField.js",
            "modules": {},
            "classes": {
                "DepthOfField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/desaturateEffect.js": {
            "name": "src/viewer/effects/desaturateEffect.js",
            "modules": {},
            "classes": {
                "DesaturateEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/effect.js": {
            "name": "src/viewer/effects/effect.js",
            "modules": {},
            "classes": {
                "Effect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/highlightEffect.js": {
            "name": "src/viewer/effects/highlightEffect.js",
            "modules": {},
            "classes": {
                "HighlightEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/isolateEffect.js": {
            "name": "src/viewer/effects/isolateEffect.js",
            "modules": {},
            "classes": {
                "IsolateEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/labelEffect.js": {
            "name": "src/viewer/effects/labelEffect.js",
            "modules": {},
            "classes": {
                "LabelEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/render.js": {
            "name": "src/viewer/effects/render.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/effects/xrayEffect.js": {
            "name": "src/viewer/effects/xrayEffect.js",
            "modules": {},
            "classes": {
                "XRayEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/geometry/_module.js": {
            "name": "src/viewer/geometry/_module.js",
            "modules": {
                "geometry": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/geometry/boxGeometry.js": {
            "name": "src/viewer/geometry/boxGeometry.js",
            "modules": {},
            "classes": {
                "BoxGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/geometry/geometry.js": {
            "name": "src/viewer/geometry/geometry.js",
            "modules": {},
            "classes": {
                "Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/geometry/teapotGeometry.js": {
            "name": "src/viewer/geometry/teapotGeometry.js",
            "modules": {},
            "classes": {
                "TeapotGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/_module.js": {
            "name": "src/viewer/input/_module.js",
            "modules": {
                "input": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/cameraControl.js": {
            "name": "src/viewer/input/cameraControl.js",
            "modules": {},
            "classes": {
                "CameraControl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/clickSelectObjects.js": {
            "name": "src/viewer/input/clickSelectObjects.js",
            "modules": {},
            "classes": {
                "ClickSelectObjects": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/input.js": {
            "name": "src/viewer/input/input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/keyboardAxisCamera.js": {
            "name": "src/viewer/input/keyboardAxisCamera.js",
            "modules": {},
            "classes": {
                "KeyboardAxisCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/keyboardOrbitCamera.js": {
            "name": "src/viewer/input/keyboardOrbitCamera.js",
            "modules": {},
            "classes": {
                "KeyboardOrbitCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/keyboardPanCamera.js": {
            "name": "src/viewer/input/keyboardPanCamera.js",
            "modules": {},
            "classes": {
                "KeyboardPanCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/keyboardZoomCamera.js": {
            "name": "src/viewer/input/keyboardZoomCamera.js",
            "modules": {},
            "classes": {
                "KeyboardZoomCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/mouseOrbitCamera.js": {
            "name": "src/viewer/input/mouseOrbitCamera.js",
            "modules": {},
            "classes": {
                "MouseOrbitCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/mousePanCamera.js": {
            "name": "src/viewer/input/mousePanCamera.js",
            "modules": {},
            "classes": {
                "MousePanCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/mousePickObject.js": {
            "name": "src/viewer/input/mousePickObject.js",
            "modules": {},
            "classes": {
                "MousePickObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/input/mouseZoomCamera.js": {
            "name": "src/viewer/input/mouseZoomCamera.js",
            "modules": {},
            "classes": {
                "MouseZoomCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/labelling/_module.js": {
            "name": "src/viewer/labelling/_module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/labelling/label.js": {
            "name": "src/viewer/labelling/label.js",
            "modules": {},
            "classes": {
                "Label": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/labelling/position.js": {
            "name": "src/viewer/labelling/position.js",
            "modules": {
                "labelling": 1
            },
            "classes": {
                "Position": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/lighting/_module.js": {
            "name": "src/viewer/lighting/_module.js",
            "modules": {
                "lighting": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/lighting/ambientLight.js": {
            "name": "src/viewer/lighting/ambientLight.js",
            "modules": {},
            "classes": {
                "AmbientLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/lighting/dirLight.js": {
            "name": "src/viewer/lighting/dirLight.js",
            "modules": {},
            "classes": {
                "DirLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/lighting/light.js": {
            "name": "src/viewer/lighting/light.js",
            "modules": {},
            "classes": {
                "Light": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/lighting/pointLight.js": {
            "name": "src/viewer/lighting/pointLight.js",
            "modules": {},
            "classes": {
                "PointLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/loading/_module.js": {
            "name": "src/viewer/loading/_module.js",
            "modules": {
                "loading": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/loading/download.js": {
            "name": "src/viewer/loading/download.js",
            "modules": {},
            "classes": {
                "Download": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/math/_module.js": {
            "name": "src/viewer/math/_module.js",
            "modules": {
                "math": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/math/math.js": {
            "name": "src/viewer/math/math.js",
            "modules": {},
            "classes": {
                "math": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/objects/_module.js": {
            "name": "src/viewer/objects/_module.js",
            "modules": {
                "objects": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/objects/boxObject.js": {
            "name": "src/viewer/objects/boxObject.js",
            "modules": {},
            "classes": {
                "BoxObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/objects/object.js": {
            "name": "src/viewer/objects/object.js",
            "modules": {},
            "classes": {
                "Object": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/objects/objectSet.js": {
            "name": "src/viewer/objects/objectSet.js",
            "modules": {},
            "classes": {
                "ObjectSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/objects/randomObjects.js": {
            "name": "src/viewer/objects/randomObjects.js",
            "modules": {},
            "classes": {
                "RandomObjects": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/objects/teapotObject.js": {
            "name": "src/viewer/objects/teapotObject.js",
            "modules": {},
            "classes": {
                "TeapotObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/reporting/_module.js": {
            "name": "src/viewer/reporting/_module.js",
            "modules": {
                "reporting": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/reporting/task.js": {
            "name": "src/viewer/reporting/task.js",
            "modules": {},
            "classes": {
                "Task": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/reporting/tasks.js": {
            "name": "src/viewer/reporting/tasks.js",
            "modules": {},
            "classes": {
                "Tasks": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/utils/map.js": {
            "name": "src/viewer/utils/map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/component.js": {
            "name": "src/viewer/component.js",
            "modules": {
                "BIMSURFER": 1
            },
            "classes": {
                "Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/cursor.js": {
            "name": "src/viewer/cursor.js",
            "modules": {},
            "classes": {
                "Cursor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/viewer/viewer.js": {
            "name": "src/viewer/viewer.js",
            "modules": {},
            "classes": {
                "Viewer": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "BIMSURFER": {
            "name": "BIMSURFER",
            "submodules": {
                "animation": 1,
                "camera": 1,
                "canvas": 1,
                "configs": 1,
                "effects": 1,
                "effect": 1,
                "geometry": 1,
                "input": 1,
                "labelling": 1,
                "lighting": 1,
                "loading": 1,
                "math": 1,
                "objects": 1,
                "reporting": 1
            },
            "classes": {
                "CameraFlyAnimation": 1,
                "Camera": 1,
                "Canvas": 1,
                "Configs": 1,
                "BIMSURFER.constants": 1,
                "Anaglyph": 1,
                "DepthOfField": 1,
                "DesaturateEffect": 1,
                "Effect": 1,
                "HighlightEffect": 1,
                "IsolateEffect": 1,
                "LabelEffect": 1,
                "Light": 1,
                "XRayEffect": 1,
                "BoxGeometry": 1,
                "Geometry": 1,
                "TeapotGeometry": 1,
                "CameraControl": 1,
                "ClickSelectObjects": 1,
                "Input": 1,
                "KeyboardAxisCamera": 1,
                "KeyboardOrbitCamera": 1,
                "KeyboardPanCamera": 1,
                "KeyboardZoomCamera": 1,
                "MouseOrbitCamera": 1,
                "MousePanCamera": 1,
                "MousePickObject": 1,
                "MouseZoomCamera": 1,
                "Label": 1,
                "AmbientLight": 1,
                "DirLight": 1,
                "PointLight": 1,
                "Download": 1,
                "math": 1,
                "BoxObject": 1,
                "Object": 1,
                "ObjectSet": 1,
                "RandomObjects": 1,
                "TeapotObject": 1,
                "Task": 1,
                "Tasks": 1,
                "Component": 1,
                "Cursor": 1,
                "Viewer": 1
            },
            "fors": {},
            "namespaces": {
                "BIMSURFER": 1
            },
            "tag": "module",
            "file": "src/viewer/viewer.js",
            "line": 1,
            "description": "**Component** is the base class for all components within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n<hr>\n*Contents*\n<Ul>\n <li><a href=\"#ids\">Component IDs</a></li>\n <li><a href=\"#componentProps\">Properties</a></li>\n <li><a href=\"#metadata\">Metadata</a></li>\n <li><a href=\"#logging\">Logging</a></li>\n <li><a href=\"#destruction\">Destruction</a></li>\n </ul>\n<hr>\n## <a name=\"ids\">Component IDs</a>\nEvery Component has an ID that's unique within the parent {{#crossLink \"Viewer\"}}{{/crossLink}}. the {{#crossLink \"Viewer\"}}{{/crossLink}} generates\n the IDs automatically by default, however you can also specify them yourself. In the example below, we're creating a\n viewer comprised of {{#crossLink \"Viewer\"}}{{/crossLink}}, {{#crossLink \"Material\"}}{{/crossLink}}, {{#crossLink \"Geometry\"}}{{/crossLink}} and\n {{#crossLink \"GameObject\"}}{{/crossLink}} components, while letting BIMSURFER generate its own ID for\n the {{#crossLink \"Geometry\"}}{{/crossLink}}:\n````javascript\n````\n## <a name=\"componentProps\">Properties</a>\nAlmost every property in a Viewer Component fires a change event when you update it. For example, we can subscribe\n to the {{#crossLink \"Material/diffuse:event\"}}{{/crossLink}} event that a\n {{#crossLink \"Material\"}}{{/crossLink}} fires when its {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}}\n property is updated, like so:\n````javascript\n // Bind a change callback to a property\n var handle = material.on(\"diffuse\", function(diffuse) {\n    console.log(\"Material diffuse color has changed to: [\" + diffuse[0] + \", \" + diffuse[1] + \",\" + diffuse[2] + \"]\");\n});\n// Change the property value, which fires the callback\n material.diffuse = [ 0.0, 0.5, 0.5 ];\n// Unsubscribe from the property change event\n material.off(handle);\n ````\nWe can also subscribe to changes in the way components are attached to each other, since components are properties\n of other components. For example, we can subscribe to the '{{#crossLink \"GameObject/material:event\"}}{{/crossLink}}' event that a\n {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} fires when its {{#crossLink \"GameObject/material:property\"}}{{/crossLink}}\n property is set to a different {{#crossLink \"Material\"}}Material{{/crossLink}}:\n```` javascript\n // Bind a change callback to the GameObject's Material\n object1.on(\"material\", function(material) {\n    console.log(\"GameObject's Material has changed to: \" + material.id);\n});\n// Now replace that Material with another\n object1.material = new BIMSURFER.Material({\n    id: \"myOtherMaterial\",\n    diffuse: [ 0.3, 0.3, 0.6 ]\n    //..\n});\n ````\n## <a name=\"metadata\">Metadata</a>\nYou can set optional **metadata** on your Components, which can be anything you like. These are intended\n to help manage your components within your application code or content pipeline. You could use metadata to attach\n authoring or version information, like this:\n````javascript\n // Viewer with authoring metadata\n var viewer = new BIMSURFER.Viewer({\n    id: \"myViewer\",\n    metadata: {\n        title: \"My awesome 3D viewer\",\n        author: \"@xeolabs\",\n date: \"February 13 2015\"\n }\n });\n// Material with descriptive metadata\n var material = new BIMSURFER.Material(viewer, {\n    id: \"myMaterial\",\n    diffuse: [1, 0, 0],\n    metadata: {\n        description: \"Bright red color with no textures\",\n        version: \"0.1\",\n        foo: \"bar\"\n    }\n});\n ````\nAs with all properties, you can subscribe and change the metadata like this:\n````javascript\n // Subscribe to changes to the Material's metadata\n material.on(\"metadata\", function(value) {\n    console.log(\"Metadata changed: \" + JSON.stringify(value));\n});\n// Change the Material's metadata, firing our change handler\n material.metadata = {\n    description: \"Bright red color with no textures\",\n    version: \"0.2\",\n    foo: \"baz\"\n};\n ````\n## <a name=\"logging\">Logging</a>\nComponents have methods to log ID-prefixed messages to the JavaScript console:\n````javascript\n material.log(\"Everything is fine, situation normal.\");\n material.warn(\"Wait, whats that red light?\");\n material.error(\"Aw, snap!\");\n ````\nThe logged messages will look like this in the console:\n````text\n [LOG]   myMaterial: Everything is fine, situation normal.\n [WARN]  myMaterial: Wait, whats that red light..\n [ERROR] myMaterial: Aw, snap!\n ````\n## <a name=\"destruction\">Destruction</a>\nGet notification of destruction directly on the Components:\n````javascript\n material.on(\"destroyed\", function() {\n    this.log(\"Component was destroyed: \" + this.id);\n});\n ````\nOr get notification of destruction of any Component within its {{#crossLink \"Viewer\"}}{{/crossLink}}, indiscriminately:\n````javascript\n viewer.on(\"componentDestroyed\", function(component) {\n    this.log(\"Component was destroyed: \" + component.id);\n});\n ````\nThen destroy a component like this:\n````javascript\n material.destroy();\n ````\nOther Components that are linked to it will fall back on a default of some sort. For example, any\n {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that were linked to our {{#crossLink \"Material\"}}{{/crossLink}}\n will then automatically link to the {{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} default {{#crossLink \"Viewer/material:property\"}}{{/crossLink}}."
        },
        "animation": {
            "name": "animation",
            "submodules": {},
            "classes": {
                "CameraFlyAnimation": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/animation/cameraFlyAnimation.js",
            "line": 1,
            "description": "Animation components."
        },
        "camera": {
            "name": "camera",
            "submodules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/camera/camera.js",
            "line": 1,
            "description": "Camera components."
        },
        "canvas": {
            "name": "canvas",
            "submodules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/canvas/canvas.js",
            "line": 1,
            "description": "Core viewer components."
        },
        "configs": {
            "name": "configs",
            "submodules": {},
            "classes": {
                "BIMSURFER.constants": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "BIMSURFER": 1
            },
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/configs/constants.js",
            "line": 1,
            "description": "Viewer configuration management.",
            "static": 1
        },
        "effects": {
            "name": "effects",
            "submodules": {},
            "classes": {
                "Anaglyph": 1,
                "DepthOfField": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/depthOfField.js",
            "line": 1,
            "description": "Rendering effects components."
        },
        "effect": {
            "name": "effect",
            "submodules": {},
            "classes": {
                "DesaturateEffect": 1,
                "Effect": 1,
                "HighlightEffect": 1,
                "IsolateEffect": 1,
                "LabelEffect": 1,
                "XRayEffect": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "description": "A **DesaturateEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that desaturates the colours of\n{{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n#### Desaturating an ObjectSet\n\nIn this example we create four {{#crossLink \"Object\"}}Objects{{/crossLink}}, then add two of them to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n<br> Then we apply a {{#crossLink \"DesaturateEffect\"}}{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}}, causing the colour of\nit's {{#crossLink \"Object\"}}Objects{{/crossLink}} to become desaturated while the other two {{#crossLink \"Object\"}}Objects{{/crossLink}} remain normal.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/effect_DesaturateEffect.html\"></iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [30, 20, -30]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n\n// Create a CameraControl so we can move the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n       color: [0.7, 0.7, 0.7]\n   });\n\n// Create a DirLight\nvar dirLight1 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [1.0, 0.0, 0.0],\n       space: \"view\"\n   });\n\n// Create a DirLight\nvar dirLight2 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [-0.5, 0.0, -1.0],\n       space: \"view\"\n   });\n\n// Create a BoxGeometry\nvar geometry = new BIMSURFER.BoxGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create some Objects\n// Share the BoxGeometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, -8])\n   });\n\nvar object2 = new BIMSURFER.Object(viewer, {\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, -8])\n   });\n\nvar object3 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRailing\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, 8])\n   });\n\nvar object4 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, 8])\n   });\n\n// Create an ObjectSet that initially contains one of our Objects\n\nvar objectSet = new BIMSURFER.ObjectSet(viewer, {\n       objects: [object1 ]\n   });\n\n// Apply a Desaturate effect to the ObjectSet, which causes the\n// Object in the ObjectSet to become desaturated.\n\nvar desaturate = new BIMSURFER.DesaturateEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add a second Object to the ObjectSet, causing the Desaturate to now render\n// that Object as desaturated also\n\nobjectSet.addObjects([object3]);\n\n````",
            "file": "src/viewer/effects/xrayEffect.js",
            "line": 1
        },
        "geometry": {
            "name": "geometry",
            "submodules": {},
            "classes": {
                "BoxGeometry": 1,
                "Geometry": 1,
                "TeapotGeometry": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/geometry/teapotGeometry.js",
            "line": 1,
            "description": "Geometry components."
        },
        "input": {
            "name": "input",
            "submodules": {},
            "classes": {
                "CameraControl": 1,
                "ClickSelectObjects": 1,
                "Input": 1,
                "KeyboardAxisCamera": 1,
                "KeyboardOrbitCamera": 1,
                "KeyboardPanCamera": 1,
                "KeyboardZoomCamera": 1,
                "MouseOrbitCamera": 1,
                "MousePanCamera": 1,
                "MousePickObject": 1,
                "MouseZoomCamera": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/mouseZoomCamera.js",
            "line": 1,
            "description": "Components for handling user interaction."
        },
        "labelling": {
            "name": "labelling",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "Position": 1,
                "Label": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/labelling/position.js",
            "line": 1,
            "description": "A **Position** is a spatial location within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\n## Overview\n\nA Position provides its coordinates in each of BIMSurfer's five coordinate systems:\n\n<ul>\n<li>{{#crossLink \"Position/pos:property\"}}{{/crossLink}} - 3D coordinates within the Position's local Model coordinate system.</li>\n<li>{{#crossLink \"Position/worldPos:property\"}}{{/crossLink}} - 3D coordinates within the Viewer's current World coordinate\nsystem, after transformation by the {{#crossLink \"Position/matrix:property\"}}Position's modelling matrix{{/crossLink}}.</li>\n<li>{{#crossLink \"Position/viewPos:property\"}}{{/crossLink}} - 3D coordinates within the Viewer's current View\ncoordinate system, after transformation by the {{#crossLink \"Viewer/viewMatrix:property\"}}Viewer's view matrix{{/crossLink}}.</li>\n<li>{{#crossLink \"Position/projPos:property\"}}{{/crossLink}} - 3D coordinates within the Viewer's current Projection\ncoordinate system, after transformation by the {{#crossLink \"Viewer/projMatrix:property\"}}Viewer's projection matrix{{/crossLink}}.</li>\n<li>{{#crossLink \"Position/canvasPos:property\"}}{{/crossLink}} - 2D coordinates within the Viewer's current Canvas\ncoordinate system.</li>\n</ul>\n\n## Example\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n    eye: [20, 20, -20]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a Position\nnew BIMSURFER.Position(viewer, {\n   pos: [0,0,0],\n   matrix: BIMSURFER.math.translationMat4v([4, 0,0])\n});\n\n````",
            "tag": "module"
        },
        "lighting": {
            "name": "lighting",
            "submodules": {},
            "classes": {
                "Light": 1,
                "AmbientLight": 1,
                "DirLight": 1,
                "PointLight": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/lighting/pointLight.js",
            "line": 1,
            "description": "Light source objects."
        },
        "loading": {
            "name": "loading",
            "submodules": {},
            "classes": {
                "Download": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/loading/download.js",
            "line": 1,
            "description": "Components for loading content."
        },
        "math": {
            "name": "math",
            "submodules": {},
            "classes": {
                "math": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/math/math.js",
            "line": 1,
            "description": "Math utilities.",
            "static": 1
        },
        "objects": {
            "name": "objects",
            "submodules": {},
            "classes": {
                "BoxObject": 1,
                "Object": 1,
                "ObjectSet": 1,
                "RandomObjects": 1,
                "TeapotObject": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/objects/teapotObject.js",
            "line": 1,
            "description": "Viewer objects and utilities."
        },
        "reporting": {
            "name": "reporting",
            "submodules": {},
            "classes": {
                "Task": 1,
                "Tasks": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/reporting/tasks.js",
            "line": 1,
            "description": "Components for reporting viewer activity and statistics."
        }
    },
    "classes": {
        "CameraFlyAnimation": {
            "name": "CameraFlyAnimation",
            "shortname": "CameraFlyAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/animation/cameraFlyAnimation.js",
            "line": 1,
            "description": "**Fly** flys a {{#crossLink \"Camera\"}}{{/crossLink}}\n## Overview\n## Example\nTODO\n````javascript\n TODO\n ````",
            "submodule": "animation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Fly configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraFlyAnimation.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "Camera to control",
                            "type": "Camera",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Camera": {
            "name": "Camera",
            "shortname": "Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/camera/camera.js",
            "line": 1,
            "description": "A **Camera** defines a viewpoint within a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>You can have an unlimited number of Cameras in a {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>At any instant, the Camera we're looking through is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>Cameras can be controlled with controls such as {{#crossLink \"CameraControl\"}}{{/crossLink}}, {{#crossLink \"KeyboardAxisCamera\"}}{{/crossLink}},\n{{#crossLink \"KeyboardOrbitCamera\"}}{{/crossLink}}, {{#crossLink \"KeyboardPanCamera\"}}{{/crossLink}}, {{#crossLink \"KeyboardZoomCamera\"}}{{/crossLink}},\n{{#crossLink \"MouseOrbitCamera\"}}{{/crossLink}}, {{#crossLink \"MousePanCamera\"}}{{/crossLink}} and {{#crossLink \"MouseZoomCamera\"}}{{/crossLink}}.</li>\n</ul>\n\n## Example\n\nIn this example we define multiple Cameras looking at a {{#crossLink \"TeapotObject\"}}{{/crossLink}}, then periodically switch between the Cameras.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/camera_Camera_multiple.html\"></iframe>\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create an object\nvar box = new BIMSURFER.TeapotObject(viewer);\n\n// Create some Cameras\nvar cameras = [\n\nnew BIMSURFER.Camera(viewer, {\n       eye: [5, 5, 5],\n       active: false\n   }),\n\nnew BIMSURFER.Camera(viewer, {\n       eye: [-5, 5, 5],\n       active: false\n   }),\n\nnew BIMSURFER.Camera(viewer, {\n       eye: [5, -5, 5],\n       active: false\n   }),\n\nnew BIMSURFER.Camera(viewer, {\n       eye: [5, 5, -5],\n       active: false\n   }),\n\nnew BIMSURFER.Camera(viewer, {\n       eye: [-5, -5, 5],\n       active: false\n   })\n];\n\n// Periodically switch between the Cameras\n\nvar i = -1;\nvar last = -1;\n\nsetInterval(function () {\n\n       if (last > -1) {\n           cameras[last].active = false\n       }\n\n       i = (i + 1) % (cameras.length - 1);\n\n       cameras[i].active = true;\n\n       last = i;\n\n   }, 1000);\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Eye position.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,-10]"
                        },
                        {
                            "name": "look",
                            "description": "The position of the point-of-interest we're looking at.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "up",
                            "description": "The \"up\" vector.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,1,0]"
                        },
                        {
                            "name": "fovy",
                            "description": "Field-of-view angle, in degrees, on Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "60.0"
                        },
                        {
                            "name": "aspect",
                            "description": "Aspect ratio.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Canvas": {
            "name": "Canvas",
            "shortname": "Canvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/canvas/canvas.js",
            "line": 1,
            "description": "A **Canvas** manages a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s HTML canvas and its WebGL context.\n\n## Overview\n\n<ul>\n\n<li>Each {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} provides a Canvas as a read-only property on itself.</li>\n\n<li>When a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} is configured with the ID of\nan existing <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>, then\nthe Canvas will bind to that, otherwise the Canvas will automatically create its own.</li>\n\n<li>A Canvas will fire a {{#crossLink \"Canvas/resized:event\"}}{{/crossLink}} event whenever\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a> resizes.</li>\n\n<li>A Canvas is responsible for obtaining a WebGL context from\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>.</li>\n\n<li>A Canvas also fires a {{#crossLink \"Canvas/webglContextLost:event\"}}{{/crossLink}} event when the WebGL context is\nlost, and a {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} when it is restored again.</li>\n\n<li>The various components within the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} will transparently recover on\nthe {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} event.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7103211/L.png\"></img>\n\n## Example\n\nIn the example below, we're creating a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} without specifying an HTML canvas element\nfor it. This causes the {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s Canvas component to create its own default element\nwithin the page. Then we subscribe to various events fired by that Canvas component.\n\n```` javascript\nvar viewer = new BIMSURFER.Viewer();\n\n// Get the Canvas off the Viewer\n// Since we did not configure the Viewer with the ID of a DOM canvas element,\n// the Canvas will create its own canvas element in the DOM\nvar canvas = viewer.canvas;\n\n// Get the WebGL context off the Canvas\nvar gl = canvas.gl;\n\n// Subscribe to Canvas resize events\ncanvas.on(\"resize\", function(e) {\n       var width = e.width;\n       var height = e.height;\n       var aspect = e.aspect;\n       //...\n    });\n\n// Subscribe to WebGL context loss events on the Canvas\ncanvas.on(\"webglContextLost\", function() {\n       //...\n    });\n\n// Subscribe to WebGL context restored events on the Canvas\ncanvas.on(\"webglContextRestored\", function(gl) {\n       var newContext = gl;\n       //...\n    });\n````",
            "submodule": "canvas",
            "static": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent viewer",
                    "type": "Viewer"
                }
            ],
            "extends": "Component"
        },
        "Configs": {
            "name": "Configs",
            "shortname": "Configs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/configs/configs.js",
            "line": 1,
            "description": "## Overview\n\n TODO\n\n ## Example\n\n TODO\n\n ```` javascript\n\n ````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, creates this Configs within the\n default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Configs.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "BIMSURFER.constants": {
            "name": "BIMSURFER.constants",
            "shortname": "constants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "submodule": "configs",
            "namespace": "BIMSURFER",
            "file": "src/viewer/configs/constants.js",
            "line": 1,
            "description": "BIMSurfer constants."
        },
        "Anaglyph": {
            "name": "Anaglyph",
            "shortname": "Anaglyph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/anaglyph.js",
            "line": 1,
            "description": "An **Anaglyph** is a {{#crossLink \"Light\"}}{{/crossLink}} that defines an ambient light source of fixed intensity and color that affects all attached {{#crossLink \"Object\"}}Objects{{/crossLink}}\n equally.\n## Overview\n<ul>\n <li>You only need one Anaglyph in your {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n <li>Normally you would combine Anaglyphs with {{#crossLink \"DirLight\"}}DirLights{{/crossLink}} and/or\n {{#crossLink \"PointLight\"}}PointLights{{/crossLink}}.</li>\n </ul>\n## Example\nIn the example below we're illuminating a {{#crossLink \"TeapotObject\"}}{{/crossLink}} with a single Anaglyph.\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/light_Anaglyph.html\"></iframe>\n```` javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n    eye: [5, 5, -5]\n});\n\n// Create a camera orbit control\nvar control = new BIMSURFER.CameraControl(viewer, {\n     camera: camera\n});\n\n// Create a TeapotObject\nvar teapot = new BIMSURFER.TeapotObject(viewer);\n\n// Create an Anaglyph\nvar anaglyph = new BIMSURFER.Anaglyph(viewer, {\n     color: [0.4, 0.4, 0.4]\n});\n ````",
            "submodule": "effects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, creates this Anaglyph within the\n default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Anaglyph configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Anaglyph.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "ambient",
                            "description": "The color of this Anaglyph.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8]"
                        }
                    ]
                }
            ],
            "extends": "Light"
        },
        "DepthOfField": {
            "name": "DepthOfField",
            "shortname": "DepthOfField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/depthOfField.js",
            "line": 1,
            "description": "An **DepthOfField** is a {{#crossLink \"Light\"}}{{/crossLink}} that defines an ambient light source of fixed intensity and color that affects all attached {{#crossLink \"Object\"}}Objects{{/crossLink}}\n equally.\n## Overview\n<ul>\n <li>You only need one DepthOfField in your {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n <li>Normally you would combine DepthOfFields with {{#crossLink \"DirLight\"}}DirLights{{/crossLink}} and/or\n {{#crossLink \"PointLight\"}}PointLights{{/crossLink}}.</li>\n </ul>\n## Example\nIn the example below we're illuminating a {{#crossLink \"TeapotObject\"}}{{/crossLink}} with a single DepthOfField.\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/light_DepthOfField.html\"></iframe>\n```` javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n    eye: [5, 5, -5]\n});\n\n// Create a camera orbit control\nvar control = new BIMSURFER.CameraControl(viewer, {\n     camera: camera\n});\n\n// Create a TeapotObject\nvar teapot = new BIMSURFER.TeapotObject(viewer);\n\n// Create an DepthOfField\nvar DepthOfField = new BIMSURFER.DepthOfField(viewer, {\n     color: [0.4, 0.4, 0.4]\n});\n ````",
            "submodule": "effects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, creates this DepthOfField within the\n default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthOfField configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DepthOfField.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "ambient",
                            "description": "The color of this DepthOfField.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8]"
                        }
                    ]
                }
            ],
            "extends": "Light"
        },
        "DesaturateEffect": {
            "name": "DesaturateEffect",
            "shortname": "DesaturateEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/desaturateEffect.js",
            "line": 1,
            "description": "A **DesaturateEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that desaturates the colours of\n{{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n#### Desaturating an ObjectSet\n\nIn this example we create four {{#crossLink \"Object\"}}Objects{{/crossLink}}, then add two of them to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n<br> Then we apply a {{#crossLink \"DesaturateEffect\"}}{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}}, causing the colour of\nit's {{#crossLink \"Object\"}}Objects{{/crossLink}} to become desaturated while the other two {{#crossLink \"Object\"}}Objects{{/crossLink}} remain normal.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/effect_DesaturateEffect.html\"></iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [30, 20, -30]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n\n// Create a CameraControl so we can move the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n       color: [0.7, 0.7, 0.7]\n   });\n\n// Create a DirLight\nvar dirLight1 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [1.0, 0.0, 0.0],\n       space: \"view\"\n   });\n\n// Create a DirLight\nvar dirLight2 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [-0.5, 0.0, -1.0],\n       space: \"view\"\n   });\n\n// Create a BoxGeometry\nvar geometry = new BIMSURFER.BoxGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create some Objects\n// Share the BoxGeometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, -8])\n   });\n\nvar object2 = new BIMSURFER.Object(viewer, {\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, -8])\n   });\n\nvar object3 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRailing\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, 8])\n   });\n\nvar object4 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, 8])\n   });\n\n// Create an ObjectSet that initially contains one of our Objects\n\nvar objectSet = new BIMSURFER.ObjectSet(viewer, {\n       objects: [object1 ]\n   });\n\n// Apply a Desaturate effect to the ObjectSet, which causes the\n// Object in the ObjectSet to become desaturated.\n\nvar desaturate = new BIMSURFER.DesaturateEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add a second Object to the ObjectSet, causing the Desaturate to now render\n// that Object as desaturated also\n\nobjectSet.addObjects([object3]);\n\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DesaturateEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objectSet",
                            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} to apply this DesaturateEffect to.",
                            "type": "ObjectSet",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Effect"
        },
        "Effect": {
            "name": "Effect",
            "shortname": "Effect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/effect.js",
            "line": 1,
            "description": "An **Effect** is a the base class for visual effects that are applied to {{#crossLink \"ObjectSet\"}}ObjectSets{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Effect is subclassed by {{#crossLink \"HighlightEffect\"}}{{/crossLink}}, {{#crossLink \"IsolateEffect\"}}{{/crossLink}} and {{#crossLink \"XRayEffect\"}}{{/crossLink}}.</li>\n<li>Multiple Effects can share the same {{#crossLink \"ObjectSet\"}}{{/crossLink}} if required.</li>\n<li>An Effect will provide its own default {{#crossLink \"ObjectSet\"}}{{/crossLink}} when you don't configure it with one.</li>\n</ul>",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Effect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objectSet",
                            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} to apply this Effect to.",
                            "type": "ObjectSet",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "HighlightEffect": {
            "name": "HighlightEffect",
            "shortname": "HighlightEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/highlightEffect.js",
            "line": 1,
            "description": "A **HighlightEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that highlights the {{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n#### Highlighting an ObjectSet\n\nIn this example we create four {{#crossLink \"Object\"}}Objects{{/crossLink}}, then add two of them to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n<br> Then we apply a {{#crossLink \"HighlightEffect\"}}{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}}, causing\nit's {{#crossLink \"Object\"}}Objects{{/crossLink}} to become highlighted while the other two {{#crossLink \"Object\"}}Objects{{/crossLink}} remain un-highlighted.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/effect_HighlightEffect.html\"></iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [30, 20, -30]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n\n// Create a CameraControl so we can move the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n       color: [0.7, 0.7, 0.7]\n   });\n\n// Create a DirLight\nvar dirLight1 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [1.0, 0.0, 0.0],\n       space: \"view\"\n   });\n\n// Create a DirLight\nvar dirLight2 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [-0.5, 0.0, -1.0],\n       space: \"view\"\n   });\n\n// Create a BoxGeometry\nvar geometry = new BIMSURFER.BoxGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create some Objects\n// Share the BoxGeometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, -8])\n   });\n\nvar object2 = new BIMSURFER.Object(viewer, {\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, -8])\n   });\n\nvar object3 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRailing\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, 8])\n   });\n\nvar object4 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, 8])\n   });\n\n// Create an ObjectSet that initially contains one of our Objects\n\nvar objectSet = new BIMSURFER.ObjectSet(viewer, {\n       objects: [object1 ]\n   });\n\n// Apply a Highlight effect to the ObjectSet, which causes the\n// Object in the ObjectSet to become highlighted.\n\nvar highlight = new BIMSURFER.HighlightEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add a second Object to the ObjectSet, causing the Highlight to now render\n// that Object as highlighted also\n\nobjectSet.addObjects([object3]);\n\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this HighlightEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objectSet",
                            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} to apply this HighlightEffect to.",
                            "type": "ObjectSet",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Effect"
        },
        "IsolateEffect": {
            "name": "IsolateEffect",
            "shortname": "IsolateEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/isolateEffect.js",
            "line": 1,
            "description": "A **IsolateEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that exclusively shows the {{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n#### Isolating an ObjectSet\n\nIsolate objects that match given IDs, using an {{#crossLink \"ObjectSet\"}}{{/crossLink}} and an IsolateEffect\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/effect_IsolateEffect.html\"></iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create some BoxObjects\n\nnew BIMSURFER.BoxObject(viewer, {\n   id: \"foo\",\n   type: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, -4])\n});\n\nnew BIMSURFER.BoxObject(viewer, {\n   id: \"bar\",\n   type: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([4, 0, -4])\n});\n\nnew BIMSURFER.BoxObject(viewer, {\n   id: \"baz\",\n   type: \"IfcBeam\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, 4])\n});\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply an Isolate effect to the ObjectSet\nvar isolateEffect = new BIMSURFER.IsolateEffect(viewer, {\n   objectSet: objectSet\n});\n\n// Add Objects to the ObjectSet by ID\n// These Objects become visible\nobjectSet.addObjectIds([\"foo\", \"bar\", \"baz\"]);\n\n// Remove an Object from the ObjectSet by ID\n// That Object becomes invisible again\nobjectSet.removeObjectIds([\"baz\"]);\n\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this IsolateEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objectSet",
                            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} to apply this IsolateEffect to.",
                            "type": "ObjectSet",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Effect"
        },
        "LabelEffect": {
            "name": "LabelEffect",
            "shortname": "LabelEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/labelEffect.js",
            "line": 1,
            "description": "A **LabelEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that labels on the {{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n#### Labelling an ObjectSet\n\nIn this example we create four {{#crossLink \"Object\"}}Objects{{/crossLink}}, then add two of them to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n<br> Then we apply a {{#crossLink \"LabelEffect\"}}{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}}, causing\nit's {{#crossLink \"Object\"}}Objects{{/crossLink}} to become labeled, while the other\ntwo {{#crossLink \"Object\"}}Objects{{/crossLink}} remain without labels.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/effect_LabelEffect.html\"></iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [30, 20, -30]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n\n// Create a CameraControl so we can move the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n       color: [0.7, 0.7, 0.7]\n   });\n\n// Create a DirLight\nvar dirLight1 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [1.0, 0.0, 0.0],\n       space: \"view\"\n   });\n\n// Create a DirLight\nvar dirLight2 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [-0.5, 0.0, -1.0],\n       space: \"view\"\n   });\n\n// Create a BoxGeometry\nvar geometry = new BIMSURFER.BoxGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create some Objects\n// Share the BoxGeometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, -8])\n   });\n\nvar object2 = new BIMSURFER.Object(viewer, {\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, -8])\n   });\n\nvar object3 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRailing\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, 8])\n   });\n\nvar object4 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, 8])\n   });\n\n// Create an ObjectSet that initially contains one of our Objects\n\nvar objectSet = new BIMSURFER.ObjectSet(viewer, {\n       objects: [object1 ]\n   });\n\n// Apply a Labels effect to the ObjectSet, which causes the\n// Object in the ObjectSet to become labelsed.\n\nvar labels = new BIMSURFER.LabelEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add a second Object to the ObjectSet, causing the Labels to now render\n// that Object as labelsed also\n\nobjectSet.addObjects([object3]);\n\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this LabelEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objectSet",
                            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} to apply this LabelEffect to.",
                            "type": "ObjectSet",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Effect"
        },
        "Light": {
            "name": "Light",
            "shortname": "Light",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/lighting/light.js",
            "line": 1,
            "description": "**Light** is the base class for all light source classes in BIMViewer.\n## Overview\n<ul>\n <li>Light is subclassed by {{#crossLink \"AmbientLight\"}}{{/crossLink}}, {{#crossLink \"DirLight\"}}{{/crossLink}} and {{#crossLink \"PointLight\"}}{{/crossLink}}.</li>\n <li>The number of Lights allowed is governed by the number of ````varying```` types supported in your WebGL.</li>\n </ul>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Light configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Light.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "Camera to control",
                            "type": "Camera",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component",
            "submodule": "lighting"
        },
        "XRayEffect": {
            "name": "XRayEffect",
            "shortname": "XRayEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/effects/xrayEffect.js",
            "line": 1,
            "description": "An **XRayEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that creates an X-ray view of the {{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n#### XRaying an ObjectSet\n\nIn this example we create four {{#crossLink \"Object\"}}Objects{{/crossLink}}, then add two of them to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n<br>Then we apply an {{#crossLink \"XRayEffect\"}}{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}}, causing\nit's {{#crossLink \"Object\"}}Objects{{/crossLink}} to remain opaque while the other two {{#crossLink \"Object\"}}Objects{{/crossLink}} become transparent.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/effect_XRayEffect.html\"></iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [20, 10, -20]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n\n// Create a CameraControl so we can move the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n       color: [0.7, 0.7, 0.7]\n   });\n\n// Create a DirLight\nvar dirLight1 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [1.0, 0.0, 0.0],\n       space: \"view\"\n   });\n\n// Create a DirLight\nvar dirLight2 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [-0.5, 0.0, -1.0],\n       space: \"view\"\n   });\n\n// Create a BoxGeometry\nvar geometry = new BIMSURFER.BoxGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create some Objects\n// Share the BoxGeometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, -8])\n   });\n\nvar object2 = new BIMSURFER.Object(viewer, {\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, -8])\n   });\n\nvar object3 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRailing\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, 8])\n   });\n\nvar object4 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, 8])\n   });\n\n// Create an ObjectSet that initially contains one of our Objects\n\nvar objectSet = new BIMSURFER.ObjectSet(viewer, {\n       objects: [object1 ]\n   });\n\n// Apply an XRay effect to the ObjectSet, which causes all Objects in the Viewer\n// that are not in the ObjectSet to become transparent.\n\nvar xray = new BIMSURFER.XRayEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add a second Object to the ObjectSet, causing the XRay to now render\n// that Object as opaque also\n\nobjectSet.addObjects([object3]);\n\n// Adjust the opacity of the transparent Objects\n\nobject2.opacity = 0.2;\nobject4.opacity = 0.2;\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this XRayEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objectSet",
                            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} to apply this XRayEffect to.",
                            "type": "ObjectSet",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Effect"
        },
        "BoxGeometry": {
            "name": "BoxGeometry",
            "shortname": "BoxGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/geometry/boxGeometry.js",
            "line": 1,
            "description": "An **BoxGeometry** is a box-shaped {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/geometry_BoxGeometry.html\"></iframe>\n\n````javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a BoxGeometry\nvar boxGeometry = new BIMSURFER.BoxGeometry(viewer);\n\n// Create an Object that uses our BoxGeometry\n// Note that an Object can have multiple Geometries\n\nnew BIMSURFER.Object(viewer, {\n   id: \"foo\",\n   type: \"IfcWall\",\n   geometries: [ boxGeometry ]\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Geometry": {
            "name": "Geometry",
            "shortname": "Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/geometry/geometry.js",
            "line": 1,
            "description": "TODO\n\n## Overview\n\nTODO\n\n## Example\n\n#### Creating a triangle mesh Geometry\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/geometry_Geometry.html\">Run this example</iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a triangle mesh Geometry\n\nvar geometry = new BIMSURFER.Geometry(viewer, {\n\n   primitive: \"triangles\",\n\n   positions: [\n       5, 5, 5, -5, 5, 5, -5, -5, 5, 5, -5, 5, // v0-v1-v2-v3 front\n       5, 5, 5, 5, -5, 5, 5, -5, -5, 5, 5, -5, // v0-v3-v4-v5 right\n       5, 5, 5, 5, 5, -5, -5, 5, -5, -5, 5, 5, // v0-v5-v6-v1 top\n       -5, 5, 5, -5, 5, -5, -5, -5, -5, -5, -5, 5, // v1-v6-v7-v2 left\n       -5, -5, -5, 5, -5, -5, 5, -5, 5, -5, -5, 5, // v7-v4-v3-v2 bottom\n       5, -5, -5, -5, -5, -5, -5, 5, -5, 5, 5, -5 // v4-v7-v6-v5 back\n   ],\n\n   normals: [\n       0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, // v0-v1-v2-v3 front\n       1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // v0-v3-v4-v5 right\n       0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // v0-v5-v6-v1 top\n      -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, // v1-v6-v7-v2 left\n       0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, // v7-v4-v3-v2 bottom\n       0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1 // v4-v7-v6-v5 back\n   ],\n\n   indices: [\n       0, 1, 2, 0, 2, 3, // back\n       4, 5, 6, 4, 6, 7,  // front\n       8, 9, 10, 8, 10, 11, // right\n       12, 13, 14, 12, 14, 15, // top\n       16, 17, 18, 16, 18, 19, // left\n       20, 21, 22, 20, 22, 23 // bottom\n   ]\n});\n\n// Create an Object that uses our Geometry\n// Note that an Object can have multiple Geometries\n\nnew BIMSURFER.BoxObject(viewer, {\n   id: \"foo\",\n   type: \"IfcWall\",\n   geometries: [ geometry ]\n});\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "positions",
                            "description": "Positions array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "normals",
                            "description": "Normals array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv",
                            "description": "UVs array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv2",
                            "description": "Second UVs array, for a second UV level.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "colors",
                            "description": "Vertex colors.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "indices",
                            "description": "Indices array.",
                            "type": "Array of Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "TeapotGeometry": {
            "name": "TeapotGeometry",
            "shortname": "TeapotGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/geometry/teapotGeometry.js",
            "line": 1,
            "description": "An **TeapotGeometry** is a teapot-shaped {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/geometry_TeapotGeometry.html\"></iframe>\n\n````javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a TeapotGeometry\nvar teapotGeometry = new BIMSURFER.TeapotGeometry(viewer);\n\n// Create an Object that uses our TeapotGeometry\n// Note that an Object can have multiple Geometries\n\nnew BIMSURFER.Object(viewer, {\n   id: \"foo\",\n   type: \"IfcWall\",\n   geometries: [ teapotGeometry ]\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "CameraControl": {
            "name": "CameraControl",
            "shortname": "CameraControl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/cameraControl.js",
            "line": 1,
            "description": "A **CameraControl** allows you to pan, rotate and zoom a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse and keyboard,\nas well as switch it between preset left, right, anterior, posterior, superior and inferior views.\n\n## Overview\n\n<ul>\n<li>You can have multiple CameraControls within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple CameraControls can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the CameraControl we're driving is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a CameraControl to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\n#### Controlling a Camera\n\nIn this example we're viewing a {{#crossLink \"RandomObjects\"}}{{/crossLink}} with a {{#crossLink \"Camera\"}}{{/crossLink}} that's controlled by a CameraControl.\n\n<iframe style=\"width: 800px; height: 600px\" src=\"../../examples/control_CameraControl.html\"></iframe>\n\n````Javascript\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [5, 5, -5]\n   });\n\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create a RandomObjects\nvar randomObjects = new BIMSURFER.RandomObjects(viewer, {\n       numObjects: 55\n   });\n````",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraControl.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The Camera to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "ClickSelectObjects": {
            "name": "ClickSelectObjects",
            "shortname": "ClickSelectObjects",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/clickSelectObjects.js",
            "line": 1,
            "description": "A **ClickSelectObjects** lets you add or remove {{#crossLink \"Object\"}}Objects{{/crossLink}} to and from an {{#crossLink \"ObjectSet\"}}ObjectSet{{/crossLink}} by clicking them with the mouse.\n\n## Overview\n\n<ul>\n<li>A ClickSelectObjects adds {{#crossLink \"Object\"}}Objects{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}} as you\nclick them with the mouse, removing them again when you click them a second time.</li>\n<li>Typically a ClickSelectObjects will share an {{#crossLink \"ObjectSet\"}}{{/crossLink}} with one or\nmore {{#crossLink \"Effect\"}}Effects{{/crossLink}}, in order to select which {{#crossLink \"Object\"}}Objects{{/crossLink}} are influenced by the {{#crossLink \"Effect\"}}Effects{{/crossLink}}.</li>\n<li>A ClickSelectObjects will provide its own {{#crossLink \"ObjectSet\"}}{{/crossLink}} by default.</li>\n<li>Hold down SHIFT while clicking to multi-select.</li>\n</ul>\n\n## Example\n\n#### Clicking Objects to add them to a highlighted ObjectSet\n\nIn this example, we view four {{#crossLink \"Objects\"}}Objects{{/crossLink}} with a {{#crossLink \"Camera\"}}{{/crossLink}}, which we manipulate with a {{#crossLink \"CameraControl\"}}{{/crossLink}}.\n<br>We also use a {{#crossLink \"ClickSelectObjects\"}}{{/crossLink}} to add and remove\nthe {{#crossLink \"Objects\"}}Objects{{/crossLink}} to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}, to which we're applying\na {{#crossLink \"HighlightEffect\"}}{{/crossLink}}.\n<br><br>\nClick on the {{#crossLink \"Objects\"}}Objects{{/crossLink}} to select and highlight them - hold down SHIFT to multi-select.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_ClickSelectObjects_HighlightEffect.html\"></iframe>\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [10, 10, -10]\n});\n\n// Create a CameraControl\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a Geometry\nvar geometry = new BIMSURFER.TeapotGeometry(viewer);\n\n// Create some Objects\n// Share the Geometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n   id: \"object1\",\n   type: \"IfcRoof\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([-3, 0, -3])\n});\n\nvar object2 = new BIMSURFER.Object(viewer, {\n   id: \"object2\",\n   type: \"IfcDistributionFlowElement\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([3, 0, -3])\n});\n\nvar object3 = new BIMSURFER.Object(viewer, {\n   id: \"object3\",\n   type: \"IfcDistributionFlowElement\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([-3, 0, 3])\n});\n\nvar object4 = new BIMSURFER.Object(viewer, {\n   id: \"object4\",\n   type: \"IfcRoof\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([3, 0, 3])\n});\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply a highlight effect to the ObjectSet\nvar highlightEffect = new BIMSURFER.HighlightEffect(viewer, {\n   objectSet: objectSet\n});\n\n// Create a ClickSelectObjects to select or unselect the Objects with the mouse\nvar clickSelectObjects = new BIMSURFER.ClickSelectObjects(viewer, {\n   objectSet: objectSet\n});\n````",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "selection",
                    "description": "The Selection to update.",
                    "type": "Selection",
                    "optional": true
                }
            ],
            "see": [
                "{Object}",
                "{ObjectSet}"
            ],
            "extends": "Component"
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/input.js",
            "line": 1,
            "description": "Publishes key and mouse events that occur on the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Each {{#crossLink \"Viewer\"}}{{/crossLink}} provides an Input on itself as a read-only property.</li>\n</ul>\n\n## Example\n\nIn this example, we're subscribing to some mouse and key events that will occur on\na {{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n````javascript\nvar viewer = new BIMSURFER.Viewer(...);\n\nvar input = viewer.input;\n\n// We'll save a handle to this subscription\n// to show how to unsubscribe, further down\nvar handle = input.on(\"mousedown\", function(coords) {\n      console.log(\"Mouse down at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseup\", function(coords) {\n      console.log(\"Mouse up at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseclicked\", function(coords) {\n     console.log(\"Mouse clicked at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"dblclick\", function(coords) {\n      console.log(\"Double-click at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"keydown\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is down\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is down\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is down\");\n              break;\n\n           default:\n              console.log(\"Some other key is down\");\n      }\n    });\n\ninput.on(\"keyup\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is up\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is up\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is up\");\n              break;\n\n           default:\n              console.log(\"Some other key is up\");\n       }\n    });\n\n// TODO: ALT and CTRL keys etc\n````\n\n### Unsubscribing from Events\n\nIn the snippet above, we saved a handle to one of our event subscriptions.\n\nWe can then use that handle to unsubscribe again, like this:\n\n````javascript\ninput.off(handle);\n````",
            "submodule": "input",
            "extends": "Component"
        },
        "KeyboardAxisCamera": {
            "name": "KeyboardAxisCamera",
            "shortname": "KeyboardAxisCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/keyboardAxisCamera.js",
            "line": 1,
            "description": "A **KeyboardAxisCamera** lets you switch a {{#crossLink \"Camera\"}}{{/crossLink}} between preset left, right, anterior, posterior, superior and inferior views using the keyboard.\n\n## Overview\n\n<ul>\n<li>If desired, you can have multiple KeyboardAxisCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardAxisCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the KeyboardAxisCamera we're driving is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardAxisCamera to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_KeyboardAxisCamera.html\"></iframe>",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardAxisCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "KeyboardOrbitCamera": {
            "name": "KeyboardOrbitCamera",
            "shortname": "KeyboardOrbitCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/keyboardOrbitCamera.js",
            "line": 1,
            "description": "A **KeyboardOrbitCamera** lets you orbit a {{#crossLink \"Camera\"}}{{/crossLink}} about its point-of-interest using the keyboard's arrow keys.\n\n## Overview\n\n<ul>\n<li>Orbiting involves rotating the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}\nposition about its current {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>The orbit is freely rotating, without gimbal-lock.</li>\n<li>If desired, you can have multiple KeyboardOrbitCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardOrbitCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the KeyboardOrbitCameras we're driving is the one whose {{#crossLink \"KeyboardOrbitCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardOrbitCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_KeyboardOrbitCamera.html\"></iframe>",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardAxisCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "KeyboardPanCamera": {
            "name": "KeyboardPanCamera",
            "shortname": "KeyboardPanCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/keyboardPanCamera.js",
            "line": 1,
            "description": "A **KeyboardPanCamera** lets you pan a {{#crossLink \"Camera\"}}{{/crossLink}} using the W, S, A and D keys.\n\n## Overview\n\n<ul>\n<li>Panning up and down involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the direction of its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} vector.</li>\n<li>Panning backwards and forwards involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the direction of its {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} - {{#crossLink \"Camera/look:property\"}}{{/crossLink}} vector.</li>\n<li>Panning left and right involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the the vector that is perpendicular to its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} and {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}-{{#crossLink \"Camera/look:property\"}}{{/crossLink}} vector.</li>\n<li>If desired, you can have multiple KeyboardPanCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardPanCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the KeyboardPanCameras we're driving is the one whose {{#crossLink \"KeyboardPanCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardPanCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_KeyboardPanCamera.html\"></iframe>",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardOrbitCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "KeyboardZoomCamera": {
            "name": "KeyboardZoomCamera",
            "shortname": "KeyboardZoomCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/keyboardZoomCamera.js",
            "line": 1,
            "description": "A **KeyboardZoomCamera** lets you zoom a {{#crossLink \"Camera\"}}{{/crossLink}} using the + and - keys.\n\n## Overview\n\n<ul>\n<li>Zooming involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} closer and farther to its {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>If desired, you can have multiple KeyboardZoomCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardZoomCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the KeyboardZoomCameras we're driving is the one whose {{#crossLink \"KeyboardZoomCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardZoomCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_KeyboardZoomCamera.html\"></iframe>",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardZoomCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "MouseOrbitCamera": {
            "name": "MouseOrbitCamera",
            "shortname": "MouseOrbitCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/mouseOrbitCamera.js",
            "line": 1,
            "description": "A **MouseOrbitCamera** lets you orbit a {{#crossLink \"Camera\"}}{{/crossLink}} about its point-of-interest using the mouse.\n\n## Overview\n\n<ul>\n<li>Orbiting involves rotating the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}\nposition about its current {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>The orbit is freely rotating, without gimbal-lock.</li>\n<li>If desired, you can have multiple MouseOrbitCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple MouseOrbitCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the MouseOrbitCameras we're driving is the one whose {{#crossLink \"MouseOrbitCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a MouseOrbitCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_MouseOrbitCamera.html\"></iframe>",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MouseOrbitCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "MousePanCamera": {
            "name": "MousePanCamera",
            "shortname": "MousePanCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/mousePanCamera.js",
            "line": 1,
            "description": "A **MousePanCamera** lets you pan a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse.\n\n## Overview\n\n<ul>\n<li>Panning is done by dragging the mouse with the left and right buttons down.</li>\n<li>Panning up and down involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the direction of its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} vector.</li>\n<li>Panning left and right involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the the vector that is perpendicular to its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} and {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}-{{#crossLink \"Camera/look:property\"}}{{/crossLink}} vector.</li>\n<li>If desired, you can have multiple MousePanCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple MousePanCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the MousePanCameras we're driving is the one whose {{#crossLink \"MousePanCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a MousePanCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_MousePanCamera.html\"></iframe>",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MousePanCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "MousePickObject": {
            "name": "MousePickObject",
            "shortname": "MousePickObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/mousePickObject.js",
            "line": 1,
            "description": "A **MousePickObject** lets you add or remove {{#crossLink \"Object\"}}Objects{{/crossLink}} to and from an {{#crossLink \"ObjectSet\"}}ObjectSet{{/crossLink}} by clicking them with the mouse.\n\n## Overview\n\n<ul>\n<li>A MousePickObject adds {{#crossLink \"Object\"}}Objects{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}} as you\nclick them with the mouse, removing them again when you click them a second time.</li>\n<li>Typically a MousePickObject will share an {{#crossLink \"ObjectSet\"}}{{/crossLink}} with one or\nmore {{#crossLink \"MousePickObject\"}}MousePickObjects{{/crossLink}}, in order to select which {{#crossLink \"Object\"}}Objects{{/crossLink}} are influenced by the {{#crossLink \"MousePickObject\"}}MousePickObjects{{/crossLink}}.</li>\n<li>A MousePickObject will provide its own {{#crossLink \"ObjectSet\"}}{{/crossLink}} by default.</li>\n<li>Hold down SHIFT while clicking to multi-select.</li>\n</ul>\n\n## Example\n\n#### Clicking Objects to add them to a highlighted ObjectSet\n\nIn this example, we view four {{#crossLink \"Objects\"}}Objects{{/crossLink}} with a {{#crossLink \"Camera\"}}{{/crossLink}}, which we manipulate with a {{#crossLink \"CameraControl\"}}{{/crossLink}}.\n<br>We also use a {{#crossLink \"MousePickObject\"}}{{/crossLink}} to add and remove\nthe {{#crossLink \"Objects\"}}Objects{{/crossLink}} to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}, to which we're applying\na {{#crossLink \"HighlightMousePickObject\"}}{{/crossLink}}.\n<br><br>\nClick on the {{#crossLink \"Objects\"}}Objects{{/crossLink}} to select and highlight them - hold down SHIFT to multi-select.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_MousePickObject_HighlightMousePickObject.html\"></iframe>\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [10, 10, -10]\n});\n\n// Create a CameraControl\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a Geometry\nvar geometry = new BIMSURFER.TeapotGeometry(viewer);\n\n// Create some Objects\n// Share the Geometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n   id: \"object1\",\n   type: \"IfcRoof\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([-3, 0, -3])\n});\n\nvar object2 = new BIMSURFER.Object(viewer, {\n   id: \"object2\",\n   type: \"IfcDistributionFlowElement\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([3, 0, -3])\n});\n\nvar object3 = new BIMSURFER.Object(viewer, {\n   id: \"object3\",\n   type: \"IfcDistributionFlowElement\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([-3, 0, 3])\n});\n\nvar object4 = new BIMSURFER.Object(viewer, {\n   id: \"object4\",\n   type: \"IfcRoof\",\n   geometries: [ geometry ],\n   matrix: BIMSURFER.math.translationMat4v([3, 0, 3])\n});\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply a highlight MousePickObject to the ObjectSet\nvar highlightMousePickObject = new BIMSURFER.HighlightMousePickObject(viewer, {\n   objectSet: objectSet\n});\n\n// Create a MousePickObject\nvar mousePickObject = new BIMSURFER.MousePickObject(viewer, {\n\n   // We want the 3D World-space coordinates of\n   // each location we pick\n   rayPick: true\n});\n\n// Handle when Object is picked\nmousePickObject.on(\"pick\", function(e) {\n       alert(\"Picked: \" + JSON.stringify(e));\n});\n\n// Handle when nothing is picked\nmousePickObject.on(\"nopick\", function(e) {\n       alert(\"Mothing picked\");\n});\n````",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MousePickObject.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "rayPick",
                    "description": "Indicates whether this MousePickObject will find the 3D ray intersection whenever it picks a\n{{#crossLink \"Object\"}}Objects{{/crossLink}}.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "active",
                    "description": "Indicates whether or not this MousePickObject is active.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "see": [
                "{Object}",
                "{ObjectSet}"
            ],
            "extends": "Component"
        },
        "MouseZoomCamera": {
            "name": "MouseZoomCamera",
            "shortname": "MouseZoomCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/input/mouseZoomCamera.js",
            "line": 1,
            "description": "A **MouseZoomCamera** lets you zoom a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse wheel.\n\n## Overview\n\n<ul>\n<li>Zooming involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} closer and farther to its {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>If desired, you can have multiple MouseZoomCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple MouseZoomCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the MouseZoomCameras we're driving is the one whose {{#crossLink \"MouseZoomCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a MouseZoomCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/control_MouseZoomCamera.html\"></iframe>",
            "submodule": "input",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MouseZoomCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/labelling/label.js",
            "line": 1,
            "description": "A **Label** is a user-defined HTML element that floats over a 3D position within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>When configured with an {{#crossLink \"Object\"}}{{/crossLink}}, a Label will always track\nits {{#crossLink \"Object\"}}Object's{{/crossLink}} position, offset by the vector indicated\nin {{#crossLink \"Label/pos:property\"}}{{/crossLink}}.</li>\n\n<li>For debugging purposes, an {{#crossLink \"Object\"}}{{/crossLink}} has its own built-in Label, \nwhich can be shown by setting the {{#crossLink \"Object\"}}Object's{{/crossLink}} \n{{#crossLink \"Object/label:property\"}}{{/crossLink}} property true.</li>\n</ul>\n\n\n\n## Example\n\n<iframe style=\"width: 800px; height: 600px\" src=\"../../examples/label_Label.html\"></iframe>\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [20, 15, -20],\n       look: [0,-10,0]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n\n// Create a CameraControl so we can move the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n       color: [0.7, 0.7, 0.7]\n   });\n\n// Create a DirLight\nvar dirLight1 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [1.0, 0.0, 0.0],\n       space: \"view\"\n   });\n\n// Create a DirLight\nvar dirLight2 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [-0.5, 0.0, -1.0],\n       space: \"view\"\n   });\n\n// Create a BoxGeometry\nvar geometry = new BIMSURFER.BoxGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create some Objects\n// Share the BoxGeometry among them\n// Activate their debug Labels\n\nvar object1 = new BIMSURFER.Object(viewer, {\n       id: \"object1\",\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, -8])\n   });\n\nvar object2 = new BIMSURFER.Object(viewer, {\n       id: \"object2\",\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, -8])\n   });\n\nvar object3 = new BIMSURFER.Object(viewer, {\n       id: \"object3\",\n       type: \"IfcRailing\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, 8])\n   });\n\nvar object4 = new BIMSURFER.Object(viewer, {\n       id: \"object4\",\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, 8])\n   });\n\n// Create some Labels on two of the Objects\n// Each Label displays a snippet of HTML and is positioned relative to its Object's origin\n\nvar label1 = new BIMSURFER.Label(viewer, {\n       object: object1,\n       text: \"<b>Label on Object 'object1'</b><br><br><iframe width='320' height='200' \" +\n           \"src='https://www.youtube.com/embed/oTONvRtlW44' frameborder='0' allowfullscreen></iframe>\",\n       pos: [0, 2, 0] // Offset from Object's local Model-space origin\n   });\n\nvar label2 = new BIMSURFER.Label(viewer, {\n       object: object4,\n       text: \"<b>First Label on Object 'object2'</b><br>\",\n       pos: [0, 0, 0] // Offset from Object's local Model-space origin\n   });\n\nvar label3 = new BIMSURFER.Label(viewer, {\n       object: object4,\n       text: \"<b>Second label on Object 'object2'</b><br>\",\n       pos: [0, -2, 0] // Offset from Object's local Model-space origin\n   });\n````",
            "submodule": "labelling",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Label.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "object",
                            "description": "The {{#crossLink \"Object\"}}{{/crossLink}} to attach this Label to.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "text",
                            "description": "Text to insert into this Label.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Label's 3D offset from the {{#crossLink \"Object\"}}Object's{{/crossLink}} origin.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "matrix",
                            "description": "Transform matrix - a one-dimensional,\nsixteen element array of elements, an identity matrix by default.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Position"
        },
        "Position": {
            "name": "Position",
            "shortname": "Position",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "labelling",
            "namespace": "",
            "file": "src/viewer/labelling/position.js",
            "line": 1,
            "description": "A **Position** is a spatial location within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\n## Overview\n\nA Position provides its coordinates in each of BIMSurfer's five coordinate systems:\n\n<ul>\n<li>{{#crossLink \"Position/pos:property\"}}{{/crossLink}} - 3D coordinates within the Position's local Model coordinate system.</li>\n<li>{{#crossLink \"Position/worldPos:property\"}}{{/crossLink}} - 3D coordinates within the Viewer's current World coordinate\nsystem, after transformation by the {{#crossLink \"Position/matrix:property\"}}Position's modelling matrix{{/crossLink}}.</li>\n<li>{{#crossLink \"Position/viewPos:property\"}}{{/crossLink}} - 3D coordinates within the Viewer's current View\ncoordinate system, after transformation by the {{#crossLink \"Viewer/viewMatrix:property\"}}Viewer's view matrix{{/crossLink}}.</li>\n<li>{{#crossLink \"Position/projPos:property\"}}{{/crossLink}} - 3D coordinates within the Viewer's current Projection\ncoordinate system, after transformation by the {{#crossLink \"Viewer/projMatrix:property\"}}Viewer's projection matrix{{/crossLink}}.</li>\n<li>{{#crossLink \"Position/canvasPos:property\"}}{{/crossLink}} - 2D coordinates within the Viewer's current Canvas\ncoordinate system.</li>\n</ul>\n\n## Example\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n    eye: [20, 20, -20]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a Position\nnew BIMSURFER.Position(viewer, {\n   pos: [0,0,0],\n   matrix: BIMSURFER.math.translationMat4v([4, 0,0])\n});\n\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Position.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Position's 3D location.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "matrix",
                            "description": "Transform matrix - a one-dimensional, sixteen element array of elements, an identity matrix by default.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "AmbientLight": {
            "name": "AmbientLight",
            "shortname": "AmbientLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/lighting/ambientLight.js",
            "line": 1,
            "description": "An **AmbientLight** is a {{#crossLink \"Light\"}}{{/crossLink}} that defines an ambient light source of fixed intensity and color that affects all attached {{#crossLink \"Object\"}}Objects{{/crossLink}}\n equally.\n## Overview\n<ul>\n<li>You only need one AmbientLight in your {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n <li>Normally you would combine AmbientLights with {{#crossLink \"DirLight\"}}DirLights{{/crossLink}} and/or\n {{#crossLink \"PointLight\"}}PointLights{{/crossLink}}.</li>\n</ul>\n## Example\nIn the example below we're illuminating a {{#crossLink \"TeapotObject\"}}{{/crossLink}} with a single AmbientLight.\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/light_AmbientLight.html\"></iframe>\n```` javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n    eye: [5, 5, -5]\n});\n\n// Create a camera orbit control\nvar control = new BIMSURFER.CameraControl(viewer, {\n     camera: camera\n});\n\n// Create a TeapotObject\nvar teapot = new BIMSURFER.TeapotObject(viewer);\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n     color: [0.4, 0.4, 0.4]\n});\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, creates this AmbientLight within the\n default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "AmbientLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this AmbientLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "ambient",
                            "description": "The color of this AmbientLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8]"
                        }
                    ]
                }
            ],
            "extends": "Light"
        },
        "DirLight": {
            "name": "DirLight",
            "shortname": "DirLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/lighting/dirLight.js",
            "line": 1,
            "description": "A **DirLight** is a {{#crossLink \"Light\"}}{{/crossLink}} that defines a directional light source that originates from a single point and spreads outward in all directions.\n\n## Overview\n\n<ul>\n\n<li>DirLights have a position, but no direction.</li>\n\n<li>DirLights may be defined in either **World** or **View** coordinate space. When in World-space, their position\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their position is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.</li>\n\n<li>Within bIMSurfer's's Phong lighting calculations, DirLight {{#crossLink \"DirLight/diffuse:property\"}}{{/crossLink}} and\n{{#crossLink \"DirLight/specular:property\"}}{{/crossLink}}.</li>\n\n<li>DirLights have {{#crossLink \"DirLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"DirLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"DirLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.</li>\n\n\n</ul>\n\n\n## Example\n\nIn the example below we're illuminating a {{#crossLink \"TeapotObject\"}}{{/crossLink}} with a single DirLight.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/light_DirLight.html\"></iframe>\n\n```` javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n     eye: [5, 5, -5]\n});\n\n// Create a camera orbit control\nvar control = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create a TeapotObject\nvar teapot = new BIMSURFER.TeapotObject(viewer);\n\n// Create a DirLight\nvar dirLight = new BIMSURFER.DirLight(viewer, {\n       color: [0.9, 0.9, 0.9],\n       dir: [1.0, 0.0, -.5],\n       space: \"view\"\n   });\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "extends": "Light",
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The DirLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DirLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "dir",
                            "description": "Direction, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "color",
                            "description": "Diffuse color of this DirLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this DirLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ]
        },
        "PointLight": {
            "name": "PointLight",
            "shortname": "PointLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/lighting/pointLight.js",
            "line": 1,
            "description": "A **PointLight** is a {{#crossLink \"Light\"}}{{/crossLink}} that defines a positional light source that originates from a single point and spreads outward in all directions.\n\n## Overview\n\n<ul>\n\n<li>PointLights have a position, but no direction.</li>\n\n<li>PointLights may be defined in either **World** or **View** coordinate space. When in World-space, their position\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their position is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.</li>\n\n<li>PointLights have {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.</li>\n\n</ul>\n\n\n## Example\n\nIn the example below we're illuminating a {{#crossLink \"TeapotObject\"}}{{/crossLink}} with a single PointLight.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/light_PointLight.html\"></iframe>\n\n```` javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [5, 5, -5]\n});\n\n// Create a camera orbit control\nvar control = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create a TeapotObject\nvar teapot = new BIMSURFER.TeapotObject(viewer);\n\n// Create a PointLight\nvar pointLight = new BIMSURFER.PointLight(viewer, {\n       color: [0.9, 0.9, 0.9],\n       pos: [-10.0, 10.0, 10.0],\n       constantAttenuation: 0.0,\n       linearAttenuation: 0.0,\n       quadraticAttenuation: 0.0,\n       space: \"view\"\n   });\n\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "extends": "Light",
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PointLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PointLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Position, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "color",
                            "description": "Diffuse color of this PointLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "constantAttenuation",
                            "description": "Constant attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "linearAttenuation",
                            "description": "Linear attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "quadraticAttenuation",
                            "description": "Quadratic attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this PointLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ]
        },
        "Download": {
            "name": "Download",
            "shortname": "Download",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/loading/download.js",
            "line": 1,
            "description": "A **Download** asynchronously downloads {{#crossLink \"Objects\"}}{{/crossLink}} from a BIMSurfer into the\nparent {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\n## Overview\n\nThe **downloadType** config specifies the type of download:\n\n<ul>\n<li>\"types\" - download {{#crossLink \"Object\"}}Objects{{/crossLink}} of the given IFC type</li>\n<li>\"revision\" - download {{#crossLink \"Object\"}}Objects{{/crossLink}} belonging to the given revision</li>\n<li>\"oids\" - download {{#crossLink \"Object\"}}Objects{{/crossLink}} having the given IDs</li>\n</ul>\n\n## Example 1: General usage\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({\n   element: \"myDiv\"\n});\n\n// Initiate a Download\nvar download = new BIMSURFER.Download(viewer, {\n   downloadType: \"types\",\n   roid: \"xyz\",\n   types: [\"\", \"\", \"\"],\n   schema: \"\",\n   autoDestroy: true // default\n});\n\n// Subscribe to progress updates\ndownload.on(\"progress\", function(e) {\n\n   // Total number of Objects being loaded\n   var numObjects = e.numObjects;\n\n   // Number of Objects loaded so far\n   var numObjectsLoaded = e.numObjectsLoaded;\n\n   // Percentage of Objects loaded so far\n   var progress = e.progress;\n\n   //...\n});\n\n// Subscribe to completion\ndownload.on(\"completed\", function(e) {\n\n   // Number of Objects loaded \n   var numObjectsLoaded = e.numObjectsLoaded;\n\n   // Since this Download component was configured with autoDestroy: true,\n   // which is the default, then this Download component will now\n   // destroy itself.\n\n   //...\n\n});\n\n// Subscribe to errors\ndownload.on(\"error\", function(e) {\n\n   // Error message\n   var message = e;\n\n   // Even though this Download component was configured with autoDestroy: true,\n   // which is the default, the Download component will not destroy itself\n   // since an error occurred.\n\n   //...\n});\n\n````\n\n## Example 2: Downloading {{#crossLink \"Object\"}}Objects{{/crossLink}} of specified IFC type\n\n```` javascript\n\nvar downloadTypes = new BIMSURFER.Download(viewer, {\n   downloadType: \"types\",\n   types: [\n       \"IfcDoor\",\n       \"IfcBuildingElementProxy\",\n       \"IfcWallStandardCase\",\n       \"IfcWall\"\n   ],\n   schema: \"XYZ\"\n});\n\n//...\n\n````\n\n## Example 3: Downloading {{#crossLink \"Object\"}}Objects{{/crossLink}} for a revision ID\n\n```` javascript\n\nvar downloadRevisions = new BIMSURFER.Download(viewer, {\n   downloadType: \"revision\",\n   roid: \"XYZ\"\n});\n\n//...\n\n````\n\n## Example 4: Downloading {{#crossLink \"Object\"}}Objects{{/crossLink}} having the given IDs\n\n```` javascript\n\nvar downloadByIDs = new BIMSURFER.Download(viewer, {\n   downloadType: \"oids\",\n   roids: [\"XYZ\", \"XYZ2\"],\n   oids: [\"XYZ\", \"XYZ2\"]\n});\n\n//...\n\n````",
            "submodule": "loading",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Label.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "models",
                            "description": "",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "downloadType",
                            "description": "Type download - \"types\", \"revision\" or \"oids\"",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "roids",
                            "description": "A list of revision IDs",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "roid",
                            "description": "A single revision ID",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "schema",
                            "description": "Schema",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "types",
                            "description": "Types of objects to download",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "oids",
                            "description": "IDs of objects to download",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "autoDestroy",
                            "description": "Indicates if this Download component should destroy itself when download complete.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "math": {
            "name": "math",
            "shortname": "math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "submodule": "math",
            "namespace": "",
            "file": "src/viewer/math/math.js",
            "line": 1,
            "description": "Math functions, used within BIMSURFER, but also available for you to use in your application code."
        },
        "BoxObject": {
            "name": "BoxObject",
            "shortname": "BoxObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/objects/boxObject.js",
            "line": 1,
            "description": "An **BoxObject** is a box-shaped {{#crossLink \"Object\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/object_BoxObject.html\"></iframe>\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n    eye: [20, 20, -20]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a BoxObject\nnew BIMSURFER.BoxObject(viewer, {\n   id: \"foo\",\n   type: \"IfcWall\",\n   matrix: BIMSURFER.math.scaleMat4v([1.5, 1.5, 1.5])\n});\n\n````",
            "submodule": "objects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxObject.",
                            "type": "String:BoxObject",
                            "optional": true
                        },
                        {
                            "name": "type",
                            "description": "The IFC type of this BoxObject.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color of this BoxObject, defaults to the color of the specified IFC type.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "geometries",
                            "description": "The {{#crossLink \"Geometry\"}}{{/crossLink}} to render for this BoxObject.",
                            "type": "Array of Geometry",
                            "optional": true
                        },
                        {
                            "name": "clipping",
                            "description": "Whether this BoxObject is clipped by {{#crossLink \"Clips\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "transparent",
                            "description": "Whether this BoxObject is transparent or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "opacity",
                            "description": "Scalar in range 0-1 that controls opacity, where 0 is completely transparent and 1 is completely opaque.\nOnly applies while this BoxObject's {{#crossLink \"BoxObject/transparent:property\"}}transparent{{/crossLink}} equals ````true````.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "highlight",
                            "description": "Whether this BoxObject is highlighted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "xray",
                            "description": "Whether this BoxObject is highlighted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "matrix",
                            "description": "Transform matrix - a one-dimensional, sixteen element array of elements, an identity matrix by default.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Object"
        },
        "Object": {
            "name": "Object",
            "shortname": "Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/objects/object.js",
            "line": 1,
            "description": "An **Object** is a visible 3D element within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nIn the example below we'll create three Objects, each with a unique ID and a modelling transform.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/object_Object.html\"></iframe>\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [10, 10, -10]\n   });\n\n// Create a CameraControl to control our Camera with mouse and keyboard\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create a Geometry\nvar geometry = new BIMSURFER.TeapotGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create first Object\n// Use the Geometry\nvar object21 = new BIMSURFER.Object(viewer, {\n       id: \"myObject1\",\n       type: \"IfcCovering\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-4, 0,0])\n   });\n\n// Create second Object\n// Reuse the Geometry\nvar object2 = new BIMSURFER.Object(viewer, {\n       id: \"myObject2\",\n       type: \"IfcFlowTerminal\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([4, 0,0])\n   });\n````\n\nWe can then find the objects in the {{#crossLink \"Viewer\"}}{{/crossLink}} by ID:\n\n````javascript\nvar foo = viewer.components[\"myObject1\"];\n````\nor by IFC type:\n````javascript\n\n// Get all Objects of the given IFC type\nvar wallObjects = viewer.components[\"IfcWall\"];\n\n// Get our \"foo\" object from those\nvar foo = wallObjects[\"moObject1\"];\n````",
            "submodule": "objects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Object.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "type",
                            "description": "The IFC type of this Object.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color of this Object, defaults to the color of the specified IFC type.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "geometries",
                            "description": "The {{#crossLink \"Geometry\"}}{{/crossLink}} to render for this Object.",
                            "type": "Array of Geometry",
                            "optional": true
                        },
                        {
                            "name": "clipping",
                            "description": "Whether this Object is clipped by {{#crossLink \"Clips\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "transparent",
                            "description": "Whether this Object is transparent or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "opacity",
                            "description": "Scalar in range 0-1 that controls opacity, where 0 is completely transparent and 1 is completely opaque.\nOnly applies while this Object's {{#crossLink \"Object/transparent:property\"}}transparent{{/crossLink}} equals ````true````.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "highlight",
                            "description": "Whether this Object is highlighted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "xray",
                            "description": "Whether this Object is highlighted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "matrix",
                            "description": "Transform matrix - a one-dimensional, sixteen element array of elements, an identity matrix by default.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ObjectSet": {
            "name": "ObjectSet",
            "shortname": "ObjectSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/objects/objectSet.js",
            "line": 1,
            "description": "An **ObjectSet** is a set of {{#crossLink \"Object\"}}Objects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Supports addition and removal of {{#crossLink \"Object\"}}Objects{{/crossLink}} by instance, ID or IFC type.</li>\n<li>Can be queried for the {{#crossLink \"ObjectSet/boundary:property\"}}{{/crossLink}}\nand {{#crossLink \"ObjectSet/center:property\"}}{{/crossLink}} of its {{#crossLink \"Object\"}}Objects{{/crossLink}}.</li>\n<li>Use with a {{#crossLink \"ClickSelectObjects\"}}{{/crossLink}} to add and remove {{#crossLink \"Object\"}}Objects{{/crossLink}} with mouse clicks.</li>\n<li>Can be used to mask {{#crossLink \"Object\"}}Objects{{/crossLink}} for Effects such as {{#crossLink \"HighlightEffect\"}}{{/crossLink}}, {{#crossLink \"XRayEffect\"}}{{/crossLink}} and\n{{#crossLink \"IsolateEffect\"}}{{/crossLink}}.</li>\n\n</ul>\n\n## Example\n\n#### Highlighting an ObjectSet\n\nIn this example we create four {{#crossLink \"Object\"}}Objects{{/crossLink}}, then add two of them to an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n<br> Then we apply a {{#crossLink \"HighlightEffect\"}}{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}}, causing\nit's {{#crossLink \"Object\"}}Objects{{/crossLink}} to become highlighted while the other two {{#crossLink \"Object\"}}Objects{{/crossLink}} remain un-highlighted.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/object_ObjectSet_addObjects.html\"></iframe>\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [30, 20, -30]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n\n// Create a CameraControl so we can move the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create an AmbientLight\nvar ambientLight = new BIMSURFER.AmbientLight(viewer, {\n       color: [0.7, 0.7, 0.7]\n   });\n\n// Create a DirLight\nvar dirLight1 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [1.0, 0.0, 0.0],\n       space: \"view\"\n   });\n\n// Create a DirLight\nvar dirLight2 = new BIMSURFER.DirLight(viewer, {\n       color: [0.6, 0.9, 0.9],\n       dir: [-0.5, 0.0, -1.0],\n       space: \"view\"\n   });\n\n// Create a BoxGeometry\nvar geometry = new BIMSURFER.BoxGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create some Objects\n// Share the BoxGeometry among them\n\nvar object1 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, -8])\n   });\n\nvar object2 = new BIMSURFER.Object(viewer, {\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, -8])\n   });\n\nvar object3 = new BIMSURFER.Object(viewer, {\n       type: \"IfcDistributionFlowElement\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([-8, 0, 8])\n   });\n\nvar object4 = new BIMSURFER.Object(viewer, {\n       type: \"IfcRoof\",\n       geometries: [ geometry ],\n       matrix: BIMSURFER.math.translationMat4v([8, 0, 8])\n   });\n\n// Create an ObjectSet that initially contains one of our Objects\n\nvar objectSet = new BIMSURFER.ObjectSet(viewer, {\n       objects: [object1 ]\n   });\n\n// Apply a Highlight effect to the ObjectSet, which causes the\n// Object in the ObjectSet to become highlighted.\n\nvar highlight = new BIMSURFER.HighlightEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add a second Object to the ObjectSet, causing the Highlight to now render\n// that Object as highlighted also\n\nobjectSet.addObjects([object3]);\n\n````\n\n#### Boundaries\n\nTODO",
            "submodule": "objects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Selection.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objects",
                            "description": "} Array of {{#crossLink \"Object\"}}{{/crossLink}} IDs or instances.",
                            "type": "Array of String|Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "RandomObjects": {
            "name": "RandomObjects",
            "shortname": "RandomObjects",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/objects/randomObjects.js",
            "line": 1,
            "description": "**RandomObjects** is a group of random {{#crossLink \"BoxObject\"}}BoxObjects{{/crossLink}}, useful for tests and demos.\n## Overview\n<ul>\n <li>The {{#crossLink \"BoxObject\"}}BoxObjects{{/crossLink}} are arranged in a 2D grid, and each get an IFC type, picked at random\n from among the {{#crossLink \"BIMSURFER.constants/defaultTypes:property\"}}{{/crossLink}}.</li>\n </ul>\n## Example\nIn this example we create a RandomObjects containing 55 {{#crossLink \"Object\"}}Objects{{/crossLink}}:\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/object_RandomObjects.html\"></iframe>\n````javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n     eye: [70, 70, -70]\n});\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n    camera.rotateEyeY(0.2);\n});\n\n// Create a CameraControl\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n    camera: camera\n});\n\n// Create a RandomObjects\nvar randomObjects = new BIMSURFER.RandomObjects(viewer, {\n    numObjects: 55\n});\n ````",
            "submodule": "objects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "RandomObjects configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this RandomObjects.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "numObjects",
                            "description": "Number of {{#crossLink \"Object\"}}Objects{{/crossLink}} within this RandomObjects.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "labels",
                            "description": "Indicates whether to show debugging {{#crossLink \"Label\"}}Labels{{/crossLink}} on the {{#crossLink \"Object\"}}Objects{{/crossLink}} within this RandomObjects.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "TeapotObject": {
            "name": "TeapotObject",
            "shortname": "TeapotObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/objects/teapotObject.js",
            "line": 1,
            "description": "An **TeapotObject** is a teapot-shaped {{#crossLink \"Object\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/object_TeapotObject.html\"></iframe>\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create a TeapotObject\nnew BIMSURFER.TeapotObject(viewer, {\n   id: \"foo\",\n   type: \"IfcWall\",\n   matrix: BIMSURFER.math.scaleMat4v([ 1.5, 1.5, 1.5 ])\n});\n\n````",
            "submodule": "objects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxObject.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Object"
        },
        "Task": {
            "name": "Task",
            "shortname": "Task",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/reporting/task.js",
            "line": 1,
            "description": "A **Task** represents an asynchronously-running process within a {{#crossLink \"Tasks\"}}Tasks{{/crossLink}}.\n\n## Overview\n\nSee the {{#crossLink \"Tasks\"}}{{/crossLink}} documentation for more information.</li>\n\n<img src=\"../../../assets/images/Task.png\"></img>",
            "submodule": "reporting",
            "extends": "Component"
        },
        "Tasks": {
            "name": "Tasks",
            "shortname": "Tasks",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/reporting/tasks.js",
            "line": 1,
            "description": "A **Tasks** tracks general asynchronous tasks running within a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Each {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} has a Tasks component, available via the\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Viewer/tasks:property\"}}tasks{{/crossLink}} property,\nwithin which it will create and destroy {{#crossLink \"Task\"}}Task{{/crossLink}} components to indicate what processes\nit's running internally.</li>\n\n<li>You can also manage your own {{#crossLink \"Task\"}}Task{{/crossLink}} components within that, to indicate what\napplication-level processes you are running.</li>\n</ul>\n\n## Example\n\nThis example shows how to manage tasks and subscribe to their life cycles.\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({ element: \"myDiv\" });\n\n// Get the Tasks tracker\nvar tasks = viewer.tasks;\n\n// Subscribe to all task creations\ntasks.on(\"started\", function(task) {\n    console.log(\"Task started: \" + task.id +\", \" + task.description);\n});\n\n// Subscribe to all task completions\ntasks.on(\"completed\", function(task) {\n     console.log(\"Task completed: \" + task.id +\", \" + task.description);\n});\n\n// Subscribe to all task failures\ntasks.on(\"failed\", function(task) {\n    console.log(\"Task failed: \" + task.id +\", \" + task.description);\n});\n\n// Create and start Task \"foo\"\nvar taskFoo = tasks.create({\n    id: \"foo\", // Optional, unique ID generated automatically when omitted\n    description: \"Loading something\"\n});\n\n// Create and start Task \"bar\"\nvar taskBar = tasks.create({\n    id: \"bar\",\n    description: \"Loading something else\"\n});\n\n// Subscribe to completion of Task \"foo\"\ntaskFoo.on(\"completed\", function(task) {\n    console.log(\"Task completed: \" + task.id +\", \" + task.description);\n});\n\n// Subscribe to failure of a specific task\ntaskFoo.on(\"failed\", function(task) {\n    console.log(\"Task failed: \" + task.id +\", \" + task.description);\n});\n\n// Set Task \"foo\" as completed, via the Tasks\n// Fires the \"completed\" handler we registered above, also fires \"completed\" on the Task itself\ntasks.setCompleted(\"foo\");\n\n// Set Task \"bar\" as failed, this time directly on the Task in question\nmyTask2.setFailed();\n\n````",
            "submodule": "reporting",
            "is_constructor": 1,
            "extends": "Component"
        },
        "Component": {
            "name": "Component",
            "shortname": "Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/component.js",
            "line": 1,
            "description": "**Component** is the base class for all components within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n<hr>\n*Contents*\n<Ul>\n <li><a href=\"#ids\">Component IDs</a></li>\n <li><a href=\"#componentProps\">Properties</a></li>\n <li><a href=\"#metadata\">Metadata</a></li>\n <li><a href=\"#logging\">Logging</a></li>\n <li><a href=\"#destruction\">Destruction</a></li>\n </ul>\n<hr>\n## <a name=\"ids\">Component IDs</a>\nEvery Component has an ID that's unique within the parent {{#crossLink \"Viewer\"}}{{/crossLink}}. the {{#crossLink \"Viewer\"}}{{/crossLink}} generates\n the IDs automatically by default, however you can also specify them yourself. In the example below, we're creating a\n viewer comprised of {{#crossLink \"Viewer\"}}{{/crossLink}}, {{#crossLink \"Material\"}}{{/crossLink}}, {{#crossLink \"Geometry\"}}{{/crossLink}} and\n {{#crossLink \"GameObject\"}}{{/crossLink}} components, while letting BIMSURFER generate its own ID for\n the {{#crossLink \"Geometry\"}}{{/crossLink}}:\n````javascript\n````\n## <a name=\"componentProps\">Properties</a>\nAlmost every property in a Viewer Component fires a change event when you update it. For example, we can subscribe\n to the {{#crossLink \"Material/diffuse:event\"}}{{/crossLink}} event that a\n {{#crossLink \"Material\"}}{{/crossLink}} fires when its {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}}\n property is updated, like so:\n````javascript\n // Bind a change callback to a property\n var handle = material.on(\"diffuse\", function(diffuse) {\n    console.log(\"Material diffuse color has changed to: [\" + diffuse[0] + \", \" + diffuse[1] + \",\" + diffuse[2] + \"]\");\n});\n// Change the property value, which fires the callback\n material.diffuse = [ 0.0, 0.5, 0.5 ];\n// Unsubscribe from the property change event\n material.off(handle);\n ````\nWe can also subscribe to changes in the way components are attached to each other, since components are properties\n of other components. For example, we can subscribe to the '{{#crossLink \"GameObject/material:event\"}}{{/crossLink}}' event that a\n {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} fires when its {{#crossLink \"GameObject/material:property\"}}{{/crossLink}}\n property is set to a different {{#crossLink \"Material\"}}Material{{/crossLink}}:\n```` javascript\n // Bind a change callback to the GameObject's Material\n object1.on(\"material\", function(material) {\n    console.log(\"GameObject's Material has changed to: \" + material.id);\n});\n// Now replace that Material with another\n object1.material = new BIMSURFER.Material({\n    id: \"myOtherMaterial\",\n    diffuse: [ 0.3, 0.3, 0.6 ]\n    //..\n});\n ````\n## <a name=\"metadata\">Metadata</a>\nYou can set optional **metadata** on your Components, which can be anything you like. These are intended\n to help manage your components within your application code or content pipeline. You could use metadata to attach\n authoring or version information, like this:\n````javascript\n // Viewer with authoring metadata\n var viewer = new BIMSURFER.Viewer({\n    id: \"myViewer\",\n    metadata: {\n        title: \"My awesome 3D viewer\",\n        author: \"@xeolabs\",\n date: \"February 13 2015\"\n }\n });\n// Material with descriptive metadata\n var material = new BIMSURFER.Material(viewer, {\n    id: \"myMaterial\",\n    diffuse: [1, 0, 0],\n    metadata: {\n        description: \"Bright red color with no textures\",\n        version: \"0.1\",\n        foo: \"bar\"\n    }\n});\n ````\nAs with all properties, you can subscribe and change the metadata like this:\n````javascript\n // Subscribe to changes to the Material's metadata\n material.on(\"metadata\", function(value) {\n    console.log(\"Metadata changed: \" + JSON.stringify(value));\n});\n// Change the Material's metadata, firing our change handler\n material.metadata = {\n    description: \"Bright red color with no textures\",\n    version: \"0.2\",\n    foo: \"baz\"\n};\n ````\n## <a name=\"logging\">Logging</a>\nComponents have methods to log ID-prefixed messages to the JavaScript console:\n````javascript\n material.log(\"Everything is fine, situation normal.\");\n material.warn(\"Wait, whats that red light?\");\n material.error(\"Aw, snap!\");\n ````\nThe logged messages will look like this in the console:\n````text\n [LOG]   myMaterial: Everything is fine, situation normal.\n [WARN]  myMaterial: Wait, whats that red light..\n [ERROR] myMaterial: Aw, snap!\n ````\n## <a name=\"destruction\">Destruction</a>\nGet notification of destruction directly on the Components:\n````javascript\n material.on(\"destroyed\", function() {\n    this.log(\"Component was destroyed: \" + this.id);\n});\n ````\nOr get notification of destruction of any Component within its {{#crossLink \"Viewer\"}}{{/crossLink}}, indiscriminately:\n````javascript\n viewer.on(\"componentDestroyed\", function(component) {\n    this.log(\"Component was destroyed: \" + component.id);\n});\n ````\nThen destroy a component like this:\n````javascript\n material.destroy();\n ````\nOther Components that are linked to it will fall back on a default of some sort. For example, any\n {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that were linked to our {{#crossLink \"Material\"}}{{/crossLink}}\n will then automatically link to the {{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} default {{#crossLink \"Viewer/material:property\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} - creates this Component\n within the default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Component configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Component.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Cursor": {
            "name": "Cursor",
            "shortname": "Cursor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/cursor.js",
            "line": 1,
            "description": "Manages the cursor icon for a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nTODO\n\n```` javascript\n\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, creates this Configs within the\ndefault {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted",
                    "type": "Viewer",
                    "optional": true
                }
            ],
            "extends": "Object"
        },
        "Viewer": {
            "name": "Viewer",
            "shortname": "Viewer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/viewer/viewer.js",
            "line": 1,
            "description": "A **Viewer** is a WebGL-based 3D viewer for the visualisation and evaluation of BIM models.\n\n## Overview\n\n<ul>\n<li></li>\n</ul>\n\n## Example\n\nIn the example below we'll create a Viewer with a {{#crossLink \"Camera\"}}{{/crossLink}},\na {{#crossLink \"CameraControl\"}}{{/crossLink}} and a {{#crossLink \"TeapotGeometry\"}}{{/crossLink}},\nwhich is used by an {{#crossLink \"Object\"}}{{/crossLink}}.\n<br>Finally, we make the {{#crossLink \"Camera\"}}{{/crossLink}} orbit on each \"tick\" event emitted by the Viewer.\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/viewer_Viewer.html\"></iframe>\n\n````javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer({\n\n   // ID of the DIV element\n   element: \"myDiv\"\n});\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [5, 5, -5]\n   });\n\n// Create a CameraControl to control our Camera with mouse and keyboard\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create a Geometry\nvar geometry = new BIMSURFER.TeapotGeometry(viewer, {\n       id: \"myGeometry\"\n   });\n\n// Create an Object that uses the Geometry\nvar object1 = new BIMSURFER.Object(viewer, {\n       id: \"myObject1\",\n       type: \"IfcCovering\",\n       geometries: [ geometry ]\n   });\n\n// Spin the camera\nviewer.on(\"tick\", function () {\n       camera.rotateEyeY(0.2);\n   });\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Object.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "element",
                            "description": "ID or instance of a DIV element in the page.",
                            "type": "String|HTMLElement"
                        },
                        {
                            "name": "bimServerApi",
                            "description": "The BIMServer API.",
                            "type": "*"
                        }
                    ]
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/viewer/animation/cameraFlyAnimation.js",
            "line": 31,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "CameraFlyAnimation",
            "module": "BIMSURFER",
            "submodule": "animation"
        },
        {
            "file": "src/viewer/animation/cameraFlyAnimation.js",
            "line": 79,
            "description": "Begins flying this CameraFlyAnimation's {{#crossLink \"Camera\"}}{{/crossLink}} to the given target.\n\n<ul>\n    <li>When the target is a boundary, the {{#crossLink \"Camera\"}}{{/crossLink}} will fly towards the target\n    and stop when the target fills most of the canvas.</li>\n    <li>When the target is an explicit {{#crossLink \"Camera\"}}{{/crossLink}} position, given as ````eye````, ````look```` and ````up````\n     vectors, then this CameraFlyAnimation will interpolate the {{#crossLink \"Camera\"}}{{/crossLink}} to that target and stop there.</li>",
            "itemtype": "method",
            "name": "flyTo",
            "params": [
                {
                    "name": "params",
                    "description": "Flight parameters",
                    "type": "*",
                    "props": [
                        {
                            "name": "arc",
                            "description": "indicating how much the\n{{#crossLink \"Camera/eye:property\"}}Camera's eye{{/crossLink}} position will\nswing away from its {{#crossLink \"Camera/eye:property\"}}look{{/crossLink}} position as it flies to the target.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0]   Factor in range [0..1"
                        },
                        {
                            "name": "boundary",
                            "description": "}  Boundary target to fly to.",
                            "type": "Xmin:Number, ymin:Number, zmin: Number, xmax: Number, ymax: Number, zmax: Number",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Position to fly the {{#crossLink \"Camera/eye:property\"}}Camera's eye{{/crossLink}} position to.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "look",
                            "description": "Position to fly the {{#crossLink \"Camera/look:property\"}}Camera's look{{/crossLink}} position to.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "up",
                            "description": "Position to fly the {{#crossLink \"Camera/up:property\"}}Camera's up{{/crossLink}} vector to.",
                            "type": "Array of Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "ok",
                    "description": "Callback fired on arrival",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "CameraFlyAnimation",
            "module": "BIMSURFER",
            "submodule": "animation"
        },
        {
            "file": "src/viewer/animation/cameraPathAnimation.js",
            "line": 5,
            "description": "Animates a {@link BIMSURFER.Camera} along a path.",
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/animation/cameraPathAnimation.js",
            "line": 15,
            "description": "Constructor.",
            "is_constructor": 1,
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/animation/cameraPathAnimation.js",
            "line": 24,
            "description": "Activates this camera",
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/animation/cameraPathAnimation.js",
            "line": 50,
            "description": "Initializes the events necessary for the operation of this control",
            "return": {
                "description": "this"
            },
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 97,
            "description": "Defines a viewpoint within a {@link Viewer}.",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 102,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 111,
            "description": "Indicates that only one instance of a Camera may be active within\nits {{#crossLink \"Viewer\"}}{{/crossLink}} at a time. When a Camera is activated, that has\na true value for this flag, then any other active Camera will be deactivated first.",
            "itemtype": "property",
            "name": "exclusive",
            "type": "Boolean",
            "final": 1,
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 153,
            "description": "Rotate 'eye' about 'look', around the 'up' vector",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 173,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 199,
            "description": "Rotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 221,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 247,
            "description": "Pans the camera along X and Y axis.",
            "params": [
                {
                    "name": "pan",
                    "description": "The pan vector"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 301,
            "description": "Increments/decrements zoom factor, ie. distance between eye and look.",
            "params": [
                {
                    "name": "delta",
                    "description": ""
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 319,
            "description": "Flag which indicates whether this Camera is active or not.\n\nFires an {{#crossLink \"Camera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 393,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 418,
            "description": "Position of the eye.\nFires an {{#crossLink \"Camera/eye:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "eye",
            "default": "[0,0,-10]",
            "type": "Array(Number)",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 443,
            "description": "Position of the point-of-interest.\nFires a {{#crossLink \"Camera/look:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "look",
            "default": "[0,0,0]",
            "type": "Array(Number)",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 468,
            "description": "Direction of the \"up\" vector.\nFires an {{#crossLink \"Camera/up:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "up",
            "default": "[0,1,0]",
            "type": "Array(Number)",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 493,
            "description": "Field-of-view angle on Y-axis.\nFires an {{#crossLink \"Camera/fovy:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "up",
            "default": "60",
            "type": "Number",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 506,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/fovy:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fovy",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 519,
            "description": "Distance to near clip plane in normalized device coordinates [0..1].\nFires an {{#crossLink \"Camera/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 532,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 545,
            "description": "Distance to far clip plane in normalized device coordinates [0..1].\nFires an {{#crossLink \"Camera/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000",
            "type": "Number",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/camera/camera.js",
            "line": 561,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/viewer/canvas/canvas.js",
            "line": 84,
            "description": "The HTML canvas. When this BIMSURFER.Canvas was configured with the ID of an existing canvas within the DOM,\nthis property will be that element, otherwise it will be a full-page canvas that this Canvas has\ncreated by default.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Canvas",
            "module": "BIMSURFER",
            "submodule": "canvas"
        },
        {
            "file": "src/viewer/canvas/canvas.js",
            "line": 107,
            "description": "Fired wheneber the WebGL context has been lost",
            "itemtype": "event",
            "name": "webglContextLost",
            "class": "Canvas",
            "module": "BIMSURFER",
            "submodule": "canvas"
        },
        {
            "file": "src/viewer/canvas/canvas.js",
            "line": 120,
            "description": "Fired whenever the WebGL context has been restored again after having previously being lost",
            "itemtype": "event",
            "name": "webglContextRestored",
            "params": [
                {
                    "name": "value",
                    "description": "The WebGL context object"
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER",
            "submodule": "canvas"
        },
        {
            "file": "src/viewer/canvas/canvas.js",
            "line": 145,
            "description": "Fired whenever the canvas has resized",
            "itemtype": "event",
            "name": "resized",
            "params": [
                {
                    "name": "width",
                    "description": "The new canvas width",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new canvas height",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "The new canvas aspect ratio",
                    "type": "Number"
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER",
            "submodule": "canvas"
        },
        {
            "file": "src/viewer/canvas/canvas.js",
            "line": 161,
            "description": "Attempts to pick a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} at the given Canvas-space coordinates within the\nparent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.\n\nIgnores {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are attached\nto either a {{#crossLink \"Stage\"}}Stage{{/crossLink}} with {{#crossLink \"Stage/pickable:property\"}}pickable{{/crossLink}}\nset *false* or a {{#crossLink \"Modes\"}}Modes{{/crossLink}} with {{#crossLink \"Modes/picking:property\"}}picking{{/crossLink}} set *false*.\n\nOn success, will fire a {{#crossLink \"Canvas/picked:event\"}}{{/crossLink}} event on this Canvas, along with\na separate {{#crossLink \"GameObject/picked:event\"}}{{/crossLink}} event on the target {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.",
            "itemtype": "method",
            "name": "pick",
            "params": [
                {
                    "name": "canvasX",
                    "description": "X-axis Canvas coordinate.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "Y-axis Canvas coordinate.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Pick options.",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "rayPick",
                            "description": "Whether to perform a 3D ray-intersect pick.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER",
            "submodule": "canvas"
        },
        {
            "file": "src/viewer/canvas/canvas.js",
            "line": 180,
            "description": "Fired whenever the {{#crossLink \"Canvas/pick:method\"}}{{/crossLink}} method succeeds in picking\na {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "objectId",
                    "description": "The ID of the picked {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} within the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "String"
                },
                {
                    "name": "canvasX",
                    "description": "The X-axis Canvas coordinate that was picked.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "The Y-axis Canvas coordinate that was picked.",
                    "type": "Number"
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER",
            "submodule": "canvas"
        },
        {
            "file": "src/viewer/configs/configs.js",
            "line": 30,
            "is_constructor": 1,
            "params": [
                {
                    "name": "bimServerApi",
                    "description": "A BIMSurfer API",
                    "type": "Object"
                },
                {
                    "name": "div",
                    "description": "The viewport div within which the canvas will be inserted in the DOM",
                    "type": "String|DOMelement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "autoStart",
                    "description": "Starts this Viewer automatically when true",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/configs/configs.js",
            "line": 43,
            "description": "The properties",
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/configs/configs.js",
            "line": 48,
            "description": "Fires an event on this Viewer.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event",
                    "type": "Object"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/configs/configs.js",
            "line": 72,
            "description": "Subscribes to an event on this Viewer.\n\nThe callback is be called with this Viewer as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "Publication event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/configs/configs.js",
            "line": 102,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Viewer/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Viewer/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/configs/configs.js",
            "line": 121,
            "description": "Subscribes to the next occurrence of the given event on this Viewer, then un-subscribes as soon as the event is handled.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/configs/constants.js",
            "line": 12,
            "description": "Time in milliseconds before a connect or login action will timeout",
            "class": "constants",
            "module": "BIMSURFER",
            "submodule": "configs"
        },
        {
            "file": "src/viewer/configs/constants.js",
            "line": 17,
            "description": "Default IFC types.",
            "itemtype": "property",
            "name": "defaultTypes",
            "type": "{{Array of String}}",
            "class": "BIMSURFER.constants",
            "module": "BIMSURFER",
            "submodule": "configs",
            "namespace": "BIMSURFER"
        },
        {
            "file": "src/viewer/configs/constants.js",
            "line": 144,
            "description": "Returns a number whose value is limited to the given range.\n\nExample: limit the output of this computation to between 0 and 255\n(x * 255).clamp(0, 255)",
            "params": [
                {
                    "name": "s",
                    "description": "The number to clamp",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "The lower boundary of the output range",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The upper boundary of the output range",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A number in the range [min, max]"
            },
            "type": "Number",
            "class": "BIMSURFER.constants",
            "module": "BIMSURFER",
            "submodule": "configs",
            "namespace": "BIMSURFER"
        },
        {
            "file": "src/viewer/effects/anaglyph.js",
            "line": 72,
            "description": "TODO",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "Anaglyph",
            "module": "BIMSURFER",
            "submodule": "effects"
        },
        {
            "file": "src/viewer/effects/depthOfField.js",
            "line": 72,
            "description": "TODO",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "DepthOfField",
            "module": "BIMSURFER",
            "submodule": "effects"
        },
        {
            "file": "src/viewer/effects/desaturateEffect.js",
            "line": 127,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "DesaturateEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/effect.js",
            "line": 29,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/effect.js",
            "line": 40,
            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} that this Effect applies to.",
            "itemtype": "property",
            "name": "objectSet",
            "type": "ObjectSet",
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/effect.js",
            "line": 64,
            "description": "Flag which indicates whether this Effect is active or not.\n\nFires an {{#crossLink \"Effect/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/effect.js",
            "line": 118,
            "description": "Fired whenever this Effect's {{#crossLink \"Effect/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/effect.js",
            "line": 133,
            "description": "Flag which inverts the {{#crossLink \"Object\"}}Objects{{/crossLink}} that this Effect applies to.\n\n<ul>\n    <li>When true, this Effect applies to {{#crossLink \"Object\"}}Objects{{/crossLink}} that are in\n    the {{#crossLink \"Component/viewer:property\"}}{{/crossLink}} but **not** in the {{#crossLink \"Effect/objectSet:property\"}}{{/crossLink}}.</li>\n\n    <li>When false, this Effect applies to {{#crossLink \"Object\"}}Objects{{/crossLink}} that are in\n    the {{#crossLink \"Component/viewer:property\"}}{{/crossLink}} and **also** in the {{#crossLink \"Effect/objectSet:property\"}}{{/crossLink}}.</li>\n</ul>\n\nFires an {{#crossLink \"Effect/invert:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "invert",
            "type": "Boolean",
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/effect.js",
            "line": 161,
            "description": "Fired whenever this Effect's {{#crossLink \"Effect/invert:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "invert",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/highlightEffect.js",
            "line": 126,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "HighlightEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/isolateEffect.js",
            "line": 86,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "IsolateEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/labelEffect.js",
            "line": 138,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "LabelEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/effects/render.js",
            "line": 27,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Light",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/effects/render.js",
            "line": 51,
            "description": "Flag which indicates whether this Light is active or not.\n\nFires an {{#crossLink \"Light/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Light",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/effects/render.js",
            "line": 76,
            "description": "Fired whenever this Light's {{#crossLink \"Light/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Light",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/effects/xrayEffect.js",
            "line": 130,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "XRayEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/viewer/geometry/boxGeometry.js",
            "line": 55,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "BoxGeometry",
            "module": "BIMSURFER",
            "submodule": "geometry"
        },
        {
            "file": "src/viewer/geometry/geometry.js",
            "line": 97,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Geometry",
            "module": "BIMSURFER",
            "submodule": "geometry"
        },
        {
            "file": "src/viewer/geometry/teapotGeometry.js",
            "line": 56,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "TeapotGeometry",
            "module": "BIMSURFER",
            "submodule": "geometry"
        },
        {
            "file": "src/viewer/input/cameraControl.js",
            "line": 56,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/cameraControl.js",
            "line": 65,
            "description": "Indicates that only one instance of a CameraControl may be active within\nits {{#crossLink \"Viewer\"}}{{/crossLink}} at a time. When a CameraControl is activated, that has\na true value for this flag, then any other active CameraControl will be deactivated first.",
            "itemtype": "property",
            "name": "exclusive",
            "type": "Boolean",
            "final": 1,
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/cameraControl.js",
            "line": 163,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} being controlled.\n\nMust be within the same {{#crossLink \"Viewer\"}}{{/crossLink}} as this Object. Defaults to the parent\n{{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} default {{#crossLink \"Viewer/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/cameraControl.js",
            "line": 221,
            "description": "Flag which indicates whether this CameraControl is active or not.\n\nFires an {{#crossLink \"CameraControl/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/cameraControl.js",
            "line": 244,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/clickSelectObjects.js",
            "line": 109,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "ClickSelectObjects",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/clickSelectObjects.js",
            "line": 129,
            "description": "Flag which indicates whether this ClickSelectObjects is active or not.\n\nFires a {{#crossLink \"ClickSelectObjects/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "ClickSelectObjects",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/clickSelectObjects.js",
            "line": 206,
            "description": "Fired whenever this ClickSelectObjects's {{#crossLink \"ClickSelectObjects/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ClickSelectObjects",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 111,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 117,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 123,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 129,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 135,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 141,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 172,
            "description": "Fired whenever a key is pressed while the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keydown",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 197,
            "description": "Fired whenever a key is released while the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keyup",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 228,
            "description": "Fired whenever the mouse is pressed over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 257,
            "description": "Fired whenever the mouse is released over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseup",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 288,
            "description": "Fired whenever the mouse is double-clicked over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "dblclick",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 304,
            "description": "Fired whenever the mouse is moved over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 322,
            "description": "Fired whenever the mouse wheel is moved over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousewheel",
            "params": [
                {
                    "name": "delta",
                    "description": "The mouse wheel delta,",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 346,
            "description": "Fired whenever the mouse is clicked over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseclicked",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 381,
            "description": "Enable or disable all input handlers",
            "params": [
                {
                    "name": "enable",
                    "description": ""
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 394,
            "description": "Code for the BACKSPACE key.",
            "itemtype": "property",
            "name": "KEY_BACKSPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 402,
            "description": "Code for the TAB key.",
            "itemtype": "property",
            "name": "KEY_TAB",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 410,
            "description": "Code for the ENTER key.",
            "itemtype": "property",
            "name": "KEY_ENTER",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 418,
            "description": "Code for the SHIFT key.",
            "itemtype": "property",
            "name": "KEY_SHIFT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 426,
            "description": "Code for the CTRL key.",
            "itemtype": "property",
            "name": "KEY_CTRL",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 434,
            "description": "Code for the ALT key.",
            "itemtype": "property",
            "name": "KEY_ALT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 442,
            "description": "Code for the PAUSE_BREAK key.",
            "itemtype": "property",
            "name": "KEY_PAUSE_BREAK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 450,
            "description": "Code for the CAPS_LOCK key.",
            "itemtype": "property",
            "name": "KEY_CAPS_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 458,
            "description": "Code for the ESCAPE key.",
            "itemtype": "property",
            "name": "KEY_ESCAPE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 466,
            "description": "Code for the PAGE_UP key.",
            "itemtype": "property",
            "name": "KEY_PAGE_UP",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 474,
            "description": "Code for the PAGE_DOWN key.",
            "itemtype": "property",
            "name": "KEY_PAGE_DOWN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 482,
            "description": "Code for the END key.",
            "itemtype": "property",
            "name": "KEY_END",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 490,
            "description": "Code for the HOME key.",
            "itemtype": "property",
            "name": "KEY_HOME",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 498,
            "description": "Code for the LEFT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 506,
            "description": "Code for the UP_ARROW key.",
            "itemtype": "property",
            "name": "KEY_UP_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 514,
            "description": "Code for the RIGHT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 522,
            "description": "Code for the DOWN_ARROW key.",
            "itemtype": "property",
            "name": "KEY_DOWN_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 530,
            "description": "Code for the INSERT key.",
            "itemtype": "property",
            "name": "KEY_INSERT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 538,
            "description": "Code for the DELETE key.",
            "itemtype": "property",
            "name": "KEY_DELETE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 546,
            "description": "Code for the 0 key.",
            "itemtype": "property",
            "name": "KEY_NUM_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 554,
            "description": "Code for the 1 key.",
            "itemtype": "property",
            "name": "KEY_NUM_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 562,
            "description": "Code for the 2 key.",
            "itemtype": "property",
            "name": "KEY_NUM_2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 570,
            "description": "Code for the 3 key.",
            "itemtype": "property",
            "name": "KEY_NUM_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 578,
            "description": "Code for the 4 key.",
            "itemtype": "property",
            "name": "KEY_NUM_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 586,
            "description": "Code for the 5 key.",
            "itemtype": "property",
            "name": "KEY_NUM_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 594,
            "description": "Code for the 6 key.",
            "itemtype": "property",
            "name": "KEY_NUM_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 602,
            "description": "Code for the 7 key.",
            "itemtype": "property",
            "name": "KEY_NUM_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 610,
            "description": "Code for the 8 key.",
            "itemtype": "property",
            "name": "KEY_NUM_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 618,
            "description": "Code for the 9 key.",
            "itemtype": "property",
            "name": "KEY_NUM_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 626,
            "description": "Code for the A key.",
            "itemtype": "property",
            "name": "KEY_A",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 634,
            "description": "Code for the B key.",
            "itemtype": "property",
            "name": "KEY_B",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 642,
            "description": "Code for the C key.",
            "itemtype": "property",
            "name": "KEY_C",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 650,
            "description": "Code for the D key.",
            "itemtype": "property",
            "name": "KEY_D",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 658,
            "description": "Code for the E key.",
            "itemtype": "property",
            "name": "KEY_E",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 666,
            "description": "Code for the F key.",
            "itemtype": "property",
            "name": "KEY_F",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 674,
            "description": "Code for the G key.",
            "itemtype": "property",
            "name": "KEY_G",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 682,
            "description": "Code for the H key.",
            "itemtype": "property",
            "name": "KEY_H",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 690,
            "description": "Code for the I key.",
            "itemtype": "property",
            "name": "KEY_I",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 698,
            "description": "Code for the J key.",
            "itemtype": "property",
            "name": "KEY_J",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 706,
            "description": "Code for the K key.",
            "itemtype": "property",
            "name": "KEY_K",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 714,
            "description": "Code for the L key.",
            "itemtype": "property",
            "name": "KEY_L",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 722,
            "description": "Code for the M key.",
            "itemtype": "property",
            "name": "KEY_M",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 730,
            "description": "Code for the N key.",
            "itemtype": "property",
            "name": "KEY_N",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 738,
            "description": "Code for the O key.",
            "itemtype": "property",
            "name": "KEY_O",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 746,
            "description": "Code for the P key.",
            "itemtype": "property",
            "name": "KEY_P",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 754,
            "description": "Code for the Q key.",
            "itemtype": "property",
            "name": "KEY_Q",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 762,
            "description": "Code for the R key.",
            "itemtype": "property",
            "name": "KEY_R",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 770,
            "description": "Code for the S key.",
            "itemtype": "property",
            "name": "KEY_S",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 778,
            "description": "Code for the T key.",
            "itemtype": "property",
            "name": "KEY_T",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 786,
            "description": "Code for the U key.",
            "itemtype": "property",
            "name": "KEY_U",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 794,
            "description": "Code for the V key.",
            "itemtype": "property",
            "name": "KEY_V",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 802,
            "description": "Code for the W key.",
            "itemtype": "property",
            "name": "KEY_W",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 810,
            "description": "Code for the X key.",
            "itemtype": "property",
            "name": "KEY_X",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 818,
            "description": "Code for the Y key.",
            "itemtype": "property",
            "name": "KEY_Y",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 826,
            "description": "Code for the Z key.",
            "itemtype": "property",
            "name": "KEY_Z",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 834,
            "description": "Code for the LEFT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 842,
            "description": "Code for the RIGHT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 850,
            "description": "Code for the SELECT key.",
            "itemtype": "property",
            "name": "KEY_SELECT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 858,
            "description": "Code for the number pad 0 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 866,
            "description": "Code for the number pad 1 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 874,
            "description": "Code for the number pad 2 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD 2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 882,
            "description": "Code for the number pad 3 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 890,
            "description": "Code for the number pad 4 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 898,
            "description": "Code for the number pad 5 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 906,
            "description": "Code for the number pad 6 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 914,
            "description": "Code for the number pad 7 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 922,
            "description": "Code for the number pad 8 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 930,
            "description": "Code for the number pad 9 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 938,
            "description": "Code for the MULTIPLY key.",
            "itemtype": "property",
            "name": "KEY_MULTIPLY",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 946,
            "description": "Code for the ADD key.",
            "itemtype": "property",
            "name": "KEY_ADD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 954,
            "description": "Code for the SUBTRACT key.",
            "itemtype": "property",
            "name": "KEY_SUBTRACT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 962,
            "description": "Code for the DECIMAL POINT key.",
            "itemtype": "property",
            "name": "KEY_DECIMAL_POINT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 970,
            "description": "Code for the DIVIDE key.",
            "itemtype": "property",
            "name": "KEY_DIVIDE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 978,
            "description": "Code for the F1 key.",
            "itemtype": "property",
            "name": "KEY_F1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 986,
            "description": "Code for the F2 key.",
            "itemtype": "property",
            "name": "KEY_F2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 994,
            "description": "Code for the F3 key.",
            "itemtype": "property",
            "name": "KEY_F3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1002,
            "description": "Code for the F4 key.",
            "itemtype": "property",
            "name": "KEY_F4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1010,
            "description": "Code for the F5 key.",
            "itemtype": "property",
            "name": "KEY_F5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1018,
            "description": "Code for the F6 key.",
            "itemtype": "property",
            "name": "KEY_F6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1026,
            "description": "Code for the F7 key.",
            "itemtype": "property",
            "name": "KEY_F7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1034,
            "description": "Code for the F8 key.",
            "itemtype": "property",
            "name": "KEY_F8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1042,
            "description": "Code for the F9 key.",
            "itemtype": "property",
            "name": "KEY_F9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1050,
            "description": "Code for the F10 key.",
            "itemtype": "property",
            "name": "KEY_F10",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1058,
            "description": "Code for the F11 key.",
            "itemtype": "property",
            "name": "KEY_F11",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1066,
            "description": "Code for the F12 key.",
            "itemtype": "property",
            "name": "KEY_F12",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1074,
            "description": "Code for the NUM_LOCK key.",
            "itemtype": "property",
            "name": "KEY_NUM_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1082,
            "description": "Code for the SCROLL_LOCK key.",
            "itemtype": "property",
            "name": "KEY_SCROLL_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1090,
            "description": "Code for the SEMI_COLON key.",
            "itemtype": "property",
            "name": "KEY_SEMI_COLON",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1098,
            "description": "Code for the EQUAL_SIGN key.",
            "itemtype": "property",
            "name": "KEY_EQUAL_SIGN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1106,
            "description": "Code for the COMMA key.",
            "itemtype": "property",
            "name": "KEY_COMMA",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1114,
            "description": "Code for the DASH key.",
            "itemtype": "property",
            "name": "KEY_DASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1122,
            "description": "Code for the PERIOD key.",
            "itemtype": "property",
            "name": "KEY_PERIOD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1130,
            "description": "Code for the FORWARD_SLASH key.",
            "itemtype": "property",
            "name": "KEY_FORWARD_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1138,
            "description": "Code for the GRAVE_ACCENT key.",
            "itemtype": "property",
            "name": "KEY_GRAVE_ACCENT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1146,
            "description": "Code for the OPEN_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_OPEN_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1154,
            "description": "Code for the BACK_SLASH key.",
            "itemtype": "property",
            "name": "KEY_BACK_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1162,
            "description": "Code for the CLOSE_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_CLOSE_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1170,
            "description": "Code for the SINGLE_QUOTE key.",
            "itemtype": "property",
            "name": "KEY_SINGLE_QUOTE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/input.js",
            "line": 1178,
            "description": "Code for the SPACE key.",
            "itemtype": "property",
            "name": "KEY_SPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardAxisCamera.js",
            "line": 34,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardAxisCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardAxisCamera.js",
            "line": 58,
            "description": "Flag which indicates whether this KeyboardAxisCamera is active or not.\n\nFires an {{#crossLink \"KeyboardAxisCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardAxisCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardAxisCamera.js",
            "line": 196,
            "description": "Fired whenever this KeyboardAxisCamera's {{#crossLink \"KeyboardAxisCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardAxisCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardOrbitCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardOrbitCamera.js",
            "line": 57,
            "description": "Flag which indicates whether this KeyboardOrbitCamera is active or not.\n\nFires an {{#crossLink \"KeyboardOrbitCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardOrbitCamera.js",
            "line": 139,
            "description": "Fired whenever this KeyboardOrbitCamera's {{#crossLink \"KeyboardOrbitCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardPanCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardPanCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardPanCamera.js",
            "line": 61,
            "description": "Flag which indicates whether this KeyboardPanCamera is active or not.\n\nFires an {{#crossLink \"KeyboardPanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardPanCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardPanCamera.js",
            "line": 140,
            "description": "Fired whenever this KeyboardPanCamera's {{#crossLink \"KeyboardPanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardPanCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardZoomCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardZoomCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardZoomCamera.js",
            "line": 61,
            "description": "Flag which indicates whether this KeyboardZoomCamera is active or not.\n\nFires an {{#crossLink \"KeyboardZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardZoomCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/keyboardZoomCamera.js",
            "line": 120,
            "description": "Fired whenever this KeyboardZoomCamera's {{#crossLink \"KeyboardZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardZoomCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mouseOrbitCamera.js",
            "line": 39,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "MouseOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mouseOrbitCamera.js",
            "line": 63,
            "description": "Flag which indicates whether this MouseOrbitCamera is active or not.\n\nFires an {{#crossLink \"MouseOrbitCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MouseOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mouseOrbitCamera.js",
            "line": 152,
            "description": "Fired whenever this MouseOrbitCamera's {{#crossLink \"MouseOrbitCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePanCamera.js",
            "line": 40,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "MousePanCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePanCamera.js",
            "line": 69,
            "description": "Flag which indicates whether this MousePanCamera is active or not.\n\nFires an {{#crossLink \"MousePanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MousePanCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePanCamera.js",
            "line": 154,
            "description": "Fired whenever this MousePanCamera's {{#crossLink \"MousePanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePanCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePickObject.js",
            "line": 124,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "MousePickObject",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePickObject.js",
            "line": 142,
            "description": "Flag which indicates whether this MousePickObject is active or not.\n\nFires a {{#crossLink \"MousePickObject/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MousePickObject",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePickObject.js",
            "line": 187,
            "description": "Fired whenever this MousePickObject's {{#crossLink \"MousePickObject/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePickObject",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePickObject.js",
            "line": 200,
            "description": "Indicates whether this MousePickObject will find the 3D ray intersection whenever it picks an\n{{#crossLink \"Object\"}}Object{{/crossLink}}.\n\nWhen true, this MousePickObject returns the 3D World-space intersection in each\n{{#crossLink \"MousePickObject/picked:event\"}}{{/crossLink}} event.\n\nFires a {{#crossLink \"MousePickObject/rayPick:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "rayPick",
            "type": "Boolean",
            "class": "MousePickObject",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mousePickObject.js",
            "line": 224,
            "description": "Fired whenever this MousePickObject's {{#crossLink \"MousePickObject/rayPick:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "rayPick",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePickObject",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mouseZoomCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "MouseZoomCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mouseZoomCamera.js",
            "line": 64,
            "description": "Flag which indicates whether this MouseZoomCamera is active or not.\n\nFires an {{#crossLink \"MouseZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MouseZoomCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/input/mouseZoomCamera.js",
            "line": 170,
            "description": "Fired whenever this MouseZoomCamera's {{#crossLink \"MouseZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseZoomCamera",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/viewer/labelling/label.js",
            "line": 142,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Label",
            "module": "BIMSURFER",
            "submodule": "labelling"
        },
        {
            "file": "src/viewer/labelling/label.js",
            "line": 155,
            "description": "This Label's {{#crossLink \"Object\"}}{{/crossLink}}.\n\nCan be undefined.",
            "itemtype": "property",
            "name": "object",
            "type": "BIMSURFER.Object",
            "final": 1,
            "class": "Label",
            "module": "BIMSURFER",
            "submodule": "labelling"
        },
        {
            "file": "src/viewer/labelling/label.js",
            "line": 220,
            "description": "Text within this Label.\n\nFires an {{#crossLink \"Label/text:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "Label",
            "module": "BIMSURFER",
            "submodule": "labelling"
        },
        {
            "file": "src/viewer/labelling/label.js",
            "line": 238,
            "description": "Fired whenever this Label's {{#crossLink \"Label/text:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "text",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Label",
            "module": "BIMSURFER",
            "submodule": "labelling"
        },
        {
            "file": "src/viewer/labelling/label.js",
            "line": 251,
            "description": "Flag which indicates whether this Label is active or not.\n\nFires an {{#crossLink \"Label/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Label",
            "module": "BIMSURFER",
            "submodule": "labelling"
        },
        {
            "file": "src/viewer/labelling/label.js",
            "line": 274,
            "description": "Fired whenever this Label's {{#crossLink \"Label/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Label",
            "module": "BIMSURFER",
            "submodule": "labelling"
        },
        {
            "file": "src/viewer/labelling/position.js",
            "line": 62,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Position",
            "module": "labelling"
        },
        {
            "file": "src/viewer/labelling/position.js",
            "line": 126,
            "description": "The Position's 3D coordinates within its local Model coordinate system, ie. before transformation by\nthe Position's {{#crossLink \"Position/matrix:property\"}}matrix{{/crossLink}}.",
            "itemtype": "property",
            "name": "pos",
            "default": "[0,0,0]",
            "type": "{Array of Number}",
            "class": "Position",
            "module": "labelling"
        },
        {
            "file": "src/viewer/labelling/position.js",
            "line": 161,
            "description": "This Positions's 4x4 modelling transformation matrix.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Position",
            "module": "labelling"
        },
        {
            "file": "src/viewer/labelling/position.js",
            "line": 188,
            "description": "This Position's 3D coordinates within the World coordinate system, ie. after transformation by\nthe Position's {{#crossLink \"Position/matrix:property\"}}matrix{{/crossLink}} and before\ntransformation by Viewer's {{#crossLink \"Viewer/viewMatrix:property\"}}viewing matrix{{/crossLink}}.",
            "itemtype": "property",
            "name": "worldPos",
            "final": 1,
            "default": "[0,0,0]",
            "type": "{Array of Number}",
            "class": "Position",
            "module": "labelling"
        },
        {
            "file": "src/viewer/labelling/position.js",
            "line": 222,
            "description": "This Position's 3D coordinates within the View coordinate system, ie. after transformation by\nthe Viewer's {{#crossLink \"Viewer/viewMatrix:property\"}}view matrix{{/crossLink}} and before\ntransformation by the Viewer's {{#crossLink \"Viewer/projMatrix:property\"}}projection matrix{{/crossLink}}.",
            "itemtype": "property",
            "name": "viewPos",
            "final": 1,
            "type": "{Array of Number}",
            "class": "Position",
            "module": "labelling"
        },
        {
            "file": "src/viewer/labelling/position.js",
            "line": 248,
            "description": "This Position's 3D homogeneous coordinates within the Projection coordinate system, ie. after transformation by\nthe Viewer's {{#crossLink \"Viewer/projMatrix:property\"}}projection matrix{{/crossLink}}.",
            "itemtype": "property",
            "name": "projPos",
            "final": 1,
            "type": "{Array of Number}",
            "class": "Position",
            "module": "labelling"
        },
        {
            "file": "src/viewer/labelling/position.js",
            "line": 271,
            "description": "This Position's 2D coordinates within the Canvas coordinate system.",
            "itemtype": "property",
            "name": "canvasPos",
            "final": 1,
            "type": "{Array of Number}",
            "class": "Position",
            "module": "labelling"
        },
        {
            "file": "src/viewer/lighting/ambientLight.js",
            "line": 75,
            "description": "The color of this AmbientLight.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "AmbientLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/dirLight.js",
            "line": 88,
            "description": "The direction of this DirLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"DirLight/space:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/dirLight.js",
            "line": 111,
            "description": "The color of this DirLight.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/dirLight.js",
            "line": 132,
            "description": "Indicates which coordinate space this DirLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "DirLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/light.js",
            "line": 28,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Light",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/light.js",
            "line": 52,
            "description": "Flag which indicates whether this Light is active or not.\n\nFires an {{#crossLink \"Light/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Light",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/light.js",
            "line": 77,
            "description": "Fired whenever this Light's {{#crossLink \"Light/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Light",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/pointLight.js",
            "line": 95,
            "description": "The position of this PointLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"PointLight/space:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "pos",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/pointLight.js",
            "line": 118,
            "description": "The color of this PointLight.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/pointLight.js",
            "line": 140,
            "description": "The constant attenuation factor for this PointLight.",
            "itemtype": "property",
            "name": "constantAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/pointLight.js",
            "line": 160,
            "description": "The linear attenuation factor for this PointLight.",
            "itemtype": "property",
            "name": "linearAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/pointLight.js",
            "line": 180,
            "description": "The quadratic attenuation factor for this Pointlight.",
            "itemtype": "property",
            "name": "quadraticAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/lighting/pointLight.js",
            "line": 200,
            "description": "Indicates which coordinate space this PointLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "PointLight",
            "module": "BIMSURFER",
            "submodule": "lighting"
        },
        {
            "file": "src/viewer/loading/download.js",
            "line": 309,
            "description": "Fired when this Download has successfully completed.",
            "itemtype": "event",
            "name": "finished",
            "class": "Download",
            "module": "BIMSURFER",
            "submodule": "loading"
        },
        {
            "file": "src/viewer/loading/download.js",
            "line": 423,
            "description": "Fired periodically as downloading progresses, to indicate download progress.",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "progress",
                    "description": "Progress percentage"
                },
                {
                    "name": "numObjects",
                    "description": "Total number of objects to download"
                },
                {
                    "name": "numObjectsLoaded",
                    "description": "Number of objects downloaded so far"
                }
            ],
            "class": "Download",
            "module": "BIMSURFER",
            "submodule": "loading"
        },
        {
            "file": "src/viewer/loading/download.js",
            "line": 449,
            "description": "Fired when download has completed",
            "itemtype": "event",
            "name": "finished",
            "class": "Download",
            "module": "BIMSURFER",
            "submodule": "loading"
        },
        {
            "file": "src/viewer/loading/download.js",
            "line": 469,
            "description": "Reads an object from binary data packet.",
            "params": [
                {
                    "name": "data",
                    "description": "The binary data packet."
                },
                {
                    "name": "geometryType",
                    "description": "Type of geometry to read."
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Download",
            "module": "BIMSURFER",
            "submodule": "loading"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 42,
            "description": "Returns a new UUID.",
            "itemtype": "method",
            "name": "createUUID",
            "static": 1,
            "return": {
                "description": "string The new UUID"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 83,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 90,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 97,
            "description": "Floating-point modulus",
            "params": [
                {
                    "name": "a",
                    "description": ""
                },
                {
                    "name": "b",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 114,
            "description": "Negates a four-element vector.",
            "itemtype": "method",
            "name": "negateVec4",
            "params": [
                {
                    "name": "v",
                    "description": "Vector to negate",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 132,
            "description": "Adds one four-element vector to another.",
            "itemtype": "method",
            "name": "addVec4",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 151,
            "description": "Adds a scalar value to each element of a four-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 170,
            "description": "Adds one three-element vector to another.",
            "itemtype": "method",
            "name": "addVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 188,
            "description": "Adds a scalar value to each element of a three-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 206,
            "description": "Subtracts one four-element vector from another.",
            "itemtype": "method",
            "name": "subVec4",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 225,
            "description": "Subtracts one three-element vector from another.",
            "itemtype": "method",
            "name": "subVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 243,
            "description": "Subtracts one two-element vector from another.",
            "itemtype": "method",
            "name": "subVec2",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 260,
            "description": "Subtracts a scalar value from each element of a four-element vector.",
            "itemtype": "method",
            "name": "subVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 279,
            "description": "Sets each element of a 4-element vector to a scalar value minus the value of that element.",
            "itemtype": "method",
            "name": "subScalarVec4",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 298,
            "description": "Multiplies one three-element vector by another.",
            "itemtype": "method",
            "name": "mulVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 317,
            "description": "Multiplies each element of a four-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec34calar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 336,
            "description": "Multiplies each element of a three-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec3Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 354,
            "description": "Multiplies each element of a two-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec2Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 371,
            "description": "Divides one three-element vector by another.",
            "itemtype": "method",
            "name": "divVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 390,
            "description": "Divides one four-element vector by another.",
            "itemtype": "method",
            "name": "divVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 410,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 427,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 444,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 463,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 497,
            "params": [
                {
                    "name": "u",
                    "description": "vec3"
                },
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, u otherwise"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 516,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 521,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 526,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 531,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 536,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 541,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 546,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 551,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 556,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 566,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 577,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 589,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 591,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 596,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 605,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 615,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 620,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 625,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 635,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 640,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 645,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 650,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 661,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 690,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 720,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 750,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 755,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 785,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 815,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 845,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 888,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 918,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "v",
                    "description": "vec4"
                }
            ],
            "return": {
                "description": "[]"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 934,
            "params": [
                {
                    "name": "mat",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, mat otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 981,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 996,
            "params": [
                {
                    "name": "mat",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, mat otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1047,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1052,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1061,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1066,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1071,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1119,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1124,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1133,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1138,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1143,
            "params": [
                {
                    "name": "pos",
                    "description": "vec3 position of the viewer"
                },
                {
                    "name": "target",
                    "description": "vec3 point the viewer is looking at"
                },
                {
                    "name": "up",
                    "description": "vec3 pointing \"up\""
                },
                {
                    "name": "dest",
                    "description": "mat4 Optional, mat4 frustum matrix will be written into"
                }
            ],
            "return": {
                "description": "dest if specified, a new mat4 otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1236,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1241,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1273,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1309,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1337,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1354,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1366,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1397,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1417,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1423,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1436,
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/math/math.js",
            "line": 1443,
            "params": [
                {
                    "name": "min",
                    "description": ""
                },
                {
                    "name": "max",
                    "description": ""
                }
            ],
            "class": "math",
            "module": "BIMSURFER",
            "submodule": "math"
        },
        {
            "file": "src/viewer/objects/boxObject.js",
            "line": 61,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "BoxObject",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 95,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 377,
            "description": "Whether this Object is active or not.\n\nFires an {{#crossLink \"Object/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 401,
            "description": "Fired whenever this Object's {{#crossLink \"Object/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 414,
            "description": "Whether this Object is transparent.",
            "itemtype": "property",
            "name": "transparent",
            "default": "false",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 443,
            "description": "Whether this Object is highlighted.",
            "itemtype": "property",
            "name": "highlighted",
            "default": "false",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 475,
            "description": "Whether this Object is desaturated.",
            "itemtype": "property",
            "name": "desaturated",
            "default": "false",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 507,
            "description": "Whether this Object is X-rayed",
            "itemtype": "property",
            "name": "xray",
            "default": "false",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 536,
            "description": "The color of this Object.",
            "itemtype": "property",
            "name": "color",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 569,
            "description": "Factor in the range [0..1] indicating how transparent this Object is.\n\nA value of 0.0 indicates fully transparent, 1.0 is fully opaque.\n\nThis Object will appear transparent only if {{#crossLink \"Object/transparent:property\"}}{{/crossLink}} is also\nset to **true**.",
            "itemtype": "property",
            "name": "opacity",
            "default": "1.0",
            "type": "Number",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 595,
            "description": "This Object's transformation matrix.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 620,
            "description": "The World-space boundary of this Object.",
            "itemtype": "property",
            "name": "boundary",
            "type": "{*}",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 644,
            "description": "The World-space center of this Object.",
            "itemtype": "property",
            "name": "center",
            "type": "{Array of Number}",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/object.js",
            "line": 668,
            "description": "Indicates if this Object shows a debug {{#crossLink \"Label\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "label",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 138,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 151,
            "description": "The {{#crossLink \"Objects\"}}{{/crossLink}} within this ObjectSet, mapped to their IDs.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "objects",
            "type": "{{String:Object}}",
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 165,
            "description": "The number of {{#crossLink \"Objects\"}}{{/crossLink}} within this ObjectSet.",
            "itemtype": "property",
            "name": "numObjects",
            "type": "Number",
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 187,
            "description": "Fired whenever {{#crossLink \"Object\"}}Objects{{/crossLink}} are added or removed from this ObjectSet.\n\nNote that this event also indicates that the ObjectSet's {{#crossLink \"ObjectSet/boundary:property\"}}{{/crossLink}}\nand {{#crossLink \"ObjectSet/center:property\"}}{{/crossLink}} will have updated, accordingly.",
            "itemtype": "event",
            "name": "updated",
            "params": [
                {
                    "name": "e",
                    "description": "The event",
                    "props": [
                        {
                            "name": "removed",
                            "description": "Info on removed Objects",
                            "optional": true,
                            "props": [
                                {
                                    "name": "objectIds",
                                    "description": "IDs of removed Objects, when they were removed by ID",
                                    "type": "Array of String",
                                    "optional": true
                                },
                                {
                                    "name": "types",
                                    "description": "IFC types of removed Objects, when they were removed by IFC type",
                                    "type": "Array of String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "added",
                            "description": "Info on added Objects",
                            "optional": true,
                            "props": [
                                {
                                    "name": "objectIds",
                                    "description": "IDs of added Objects, when they were added by ID",
                                    "type": "Array of String",
                                    "optional": true
                                },
                                {
                                    "name": "types",
                                    "description": "IFC types of added Objects, when they were added by IFC type",
                                    "type": "Array of String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Boolean",
                    "description": "[cleared"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 224,
            "description": "Removes all {{#crossLink \"Object\"}}Objects{{/crossLink}} from this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "clear",
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 243,
            "description": "Adds all {{#crossLink \"Object\"}}Objects{{/crossLink}} in the {{#crossLink \"Viewer\"}}{{/crossLink}} to this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "addAllObjects",
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 273,
            "description": "Adds {{#crossLink \"Object\"}}Objects{{/crossLink}} instances to this ObjectSet.\n\nThe {{#crossLink \"Object\"}}Objects{{/crossLink}} must be in the same {{#crossLink \"Viewer\"}}{{/crossLink}} as this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "addObjects",
            "params": [
                {
                    "name": "objects",
                    "description": "Array of {{#crossLink \"Object\"}}Objects{{/crossLink}} instances.",
                    "type": "Array of Objects"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 336,
            "description": "Removes {{#crossLink \"Object\"}}Objects{{/crossLink}} instances from this ObjectSet.\n\nThe {{#crossLink \"Object\"}}Objects{{/crossLink}} must be in the same {{#crossLink \"Viewer\"}}{{/crossLink}} as this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "removeObjects",
            "params": [
                {
                    "name": "objects",
                    "description": "Array of {{#crossLink \"Object\"}}Objects{{/crossLink}} instances.",
                    "type": "Array of Objects"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 359,
            "description": "Adds {{#crossLink \"Object\"}}Objects{{/crossLink}} by ID to this ObjectSet.\n\nThe {{#crossLink \"Object\"}}Objects{{/crossLink}} must be in the same {{#crossLink \"Viewer\"}}{{/crossLink}} as this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "addObjectIds",
            "params": [
                {
                    "name": "objects",
                    "description": "Array of {{#crossLink \"Object\"}}Object{{/crossLink}} IDs.",
                    "type": "Array of String"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 394,
            "description": "Removes {{#crossLink \"Object\"}}Objects{{/crossLink}} by ID from this ObjectSet.\n\nThe {{#crossLink \"Object\"}}Objects{{/crossLink}} must be in the same {{#crossLink \"Viewer\"}}{{/crossLink}} as this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "removeObjectIds",
            "params": [
                {
                    "name": "objects",
                    "description": "Array of {{#crossLink \"Object\"}}Object{{/crossLink}} IDs.",
                    "type": "Array of String"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 429,
            "description": "Adds {{#crossLink \"Object\"}}Objects{{/crossLink}} by IFC type to this ObjectSet.\n\nThe {{#crossLink \"Object\"}}Objects{{/crossLink}} must be in the same {{#crossLink \"Viewer\"}}{{/crossLink}} as this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "addTypes",
            "params": [
                {
                    "name": "objects",
                    "description": "Array of IFC types.",
                    "type": "Array of String"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 470,
            "description": "Removes {{#crossLink \"Object\"}}Objects{{/crossLink}} by IFC type from this ObjectSet.\n\nThe {{#crossLink \"Object\"}}Objects{{/crossLink}} must be in the same {{#crossLink \"Viewer\"}}{{/crossLink}} as this ObjectSet.\n\nFires an {{#crossLink \"ObjectSet/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "removeTypes",
            "params": [
                {
                    "name": "objects",
                    "description": "Array of IFC types.",
                    "type": "Array of String"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 510,
            "description": "Iterates with a callback over the {{#crossLink \"Object\"}}Objects{{/crossLink}} in this ObjectSet.",
            "itemtype": "method",
            "name": "withObjects",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback called for each {{#crossLink \"Object\"}}{{/crossLink}}.",
                    "type": "Function"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 592,
            "description": "The axis-aligned World-space boundary of the {{#crossLink \"Object\"}}Objects{{/crossLink}} within this ObjectSet.",
            "itemtype": "property",
            "name": "boundary",
            "readonly": "",
            "type": "{{}}",
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/objectSet.js",
            "line": 612,
            "description": "The World-space center of the {{#crossLink \"Object\"}}Objects{{/crossLink}} within this ObjectSet.",
            "itemtype": "property",
            "name": "center",
            "readonly": "",
            "type": "{{}}",
            "class": "ObjectSet",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/randomObjects.js",
            "line": 61,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "RandomObjects",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/randomObjects.js",
            "line": 74,
            "description": "The {{#crossLink \"Objects\"}}{{/crossLink}} within this RandomObjects.",
            "type": "{{Array of Object}}",
            "class": "RandomObjects",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/objects/teapotObject.js",
            "line": 51,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "TeapotObject",
            "module": "BIMSURFER",
            "submodule": "objects"
        },
        {
            "file": "src/viewer/reporting/task.js",
            "line": 30,
            "description": "Sets this Task as successfully completed.\n\nFires a  {{#crossLink \"Task/completed:event\"}}{{/crossLink}} event on this task, as well as\na {{#crossLink \"Tasks/completed:event\"}}{{/crossLink}} event on the parent  {{#crossLink \"Tasks\"}}Task{{/crossLink}}.",
            "itemtype": "method",
            "name": "setCompleted",
            "class": "Task",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/task.js",
            "line": 40,
            "description": "Fired when this Task has successfully completed.",
            "itemtype": "event",
            "name": "completed",
            "class": "Task",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/task.js",
            "line": 48,
            "description": "Sets this Task as having failed.\n\nFires a  {{#crossLink \"Task/failed:event\"}}{{/crossLink}} event on this task, as well as\na {{#crossLink \"Tasks/failed:event\"}}{{/crossLink}} event on the parent  {{#crossLink \"Tasks\"}}Tasks{{/crossLink}}.",
            "itemtype": "method",
            "name": "setFailed",
            "class": "Task",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/task.js",
            "line": 58,
            "description": "Fired when this Task has failed to complete successfully.",
            "itemtype": "event",
            "name": "failed",
            "class": "Task",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/tasks.js",
            "line": 94,
            "description": "Creates and starts a new {{#crossLink \"Task\"}}Task{{/crossLink}} instance with this Tasks.\n\nIf an ID is given for the new {{#crossLink \"Task\"}}Task{{/crossLink}} that is already in use for\nanother, will log an error message and return null.\n\nOn success, fires a {{#crossLink \"Tasks/started:event\"}}{{/crossLink}} event and returns the new {{#crossLink \"Task\"}}Task{{/crossLink}}\n instance.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "params",
                    "description": "Task params.",
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional unique ID,\ninternally generated if not supplied.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "description",
                            "description": "Optional description.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The new new {{#crossLink \"Task\"}}Task{{/crossLink}} instance, or null if there was an ID\nclash with an existing {{#crossLink \"Task\"}}Task{{/crossLink}}.",
                "type": "Task|null"
            },
            "class": "Tasks",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/tasks.js",
            "line": 130,
            "description": "Fired whenever a Task within this Tasks has successfully completed.",
            "itemtype": "event",
            "name": "completed",
            "params": [
                {
                    "name": "value",
                    "description": "The task that has completed",
                    "type": "Task"
                }
            ],
            "class": "Tasks",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/tasks.js",
            "line": 143,
            "description": "Fired whenever a Task within this Tasks has failed.",
            "itemtype": "event",
            "name": "failed",
            "params": [
                {
                    "name": "value",
                    "description": "The task that has failed",
                    "type": "Task"
                }
            ],
            "class": "Tasks",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/tasks.js",
            "line": 161,
            "description": "Completes the {{#crossLink \"Task\"}}Task{{/crossLink}} with the given ID.\n\nFires a {{#crossLink \"Tasks/completed:event\"}}{{/crossLink}} event, as well as separate\n{{#crossLink \"Task/completed:event\"}}{{/crossLink}} event on the {{#crossLink \"Task\"}}Task{{/crossLink}} itself.\n\nLogs an error message if no task can be found for the given ID.",
            "itemtype": "method",
            "name": "setCompleted",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the {{#crossLink \"Task\"}}Task{{/crossLink}} to complete.",
                    "type": "String"
                }
            ],
            "class": "Tasks",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/reporting/tasks.js",
            "line": 184,
            "description": "Fails the {{#crossLink \"Task\"}}Task{{/crossLink}} with the given ID.\n\nFires a {{#crossLink \"Tasks/failed:event\"}}{{/crossLink}} event, as well as separate\n{{#crossLink \"Task/failed:event\"}}{{/crossLink}} event on the {{#crossLink \"Task\"}}Task{{/crossLink}} itself.\n\nLogs an error message if no task can be found for the given ID.",
            "itemtype": "method",
            "name": "setFailed",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the {{#crossLink \"Task\"}}Task{{/crossLink}} to fail.",
                    "type": "String"
                }
            ],
            "class": "Tasks",
            "module": "BIMSURFER",
            "submodule": "reporting"
        },
        {
            "file": "src/viewer/utils/map.js",
            "line": 7,
            "description": "Generic map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/utils/map.js",
            "line": 13,
            "itemtype": "property",
            "name": "Items in this map",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/utils/map.js",
            "line": 21,
            "description": "Adds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/utils/map.js",
            "line": 53,
            "description": "Removes the item of the given ID from the map and returns it",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 177,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 186,
            "description": "When true, indicates that only one instance of this component type may be active within\nits {{#crossLink \"Viewer\"}}{{/crossLink}} at a time. When a component is activated, that has\na true value for this flag, then any other active component of the same type will be\ndeactivated first.",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 203,
            "description": "The {{#crossLink \"Viewer\"}}{{/crossLink}} that contains this Component.",
            "itemtype": "property",
            "name": "viewer",
            "type": "{Viewer}",
            "final": 1,
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 212,
            "description": "Metadata on this component.",
            "itemtype": "property",
            "name": "metadata",
            "type": "Object",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 220,
            "description": "Unique ID for this Component within its parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 229,
            "description": "True as soon as this Component has been destroyed",
            "itemtype": "property",
            "name": "destroyed",
            "type": "Boolean",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 251,
            "description": "Initializes this component",
            "params": [
                {
                    "name": "cfg",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 259,
            "description": "Fires an event on this component.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 286,
            "description": "Subscribes to an event on this component.\n\nThe callback is be called with this component as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "Publication event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 316,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Component/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Component/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Subscription handle",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 335,
            "description": "Subscribes to the next occurrence of the given event, then un-subscribes as soon as the event is handled.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 353,
            "description": "Logs a console debugging message for this component.\n\nThe console message will have this format: *````[LOG] <component id>: <message>````*",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 365,
            "description": "Logs an error for this component to the JavaScript console.\n\nThe console message will have this format: *````[ERROR] <component id>: <message>````*",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 377,
            "description": "Logs a warning for this component to the JavaScript console.\n\nThe console message will have this format: *````[WARN] <component id>: <message>````*",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 389,
            "description": "Destroys this component.\n\nRemoves this Component from its {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Component/destroyed:event\"}}{{/crossLink}} event on this Component.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/component.js",
            "line": 409,
            "description": "Fired when this Component is destroyed.",
            "itemtype": "event",
            "name": "destroyed",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 97,
            "description": "The HTML element ocupied by the Viewer",
            "itemtype": "property",
            "name": "element",
            "final": 1,
            "type": "{HTMLElement}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 106,
            "description": "The BIMServer API",
            "itemtype": "property",
            "name": "bimServerApi",
            "final": 1,
            "type": "{Object}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 138,
            "description": "The HTML Canvas that this Viewer renders to. This is inserted into the element we configured this Viewer with.",
            "itemtype": "property",
            "name": "canvas",
            "final": 1,
            "type": "{HTMLCanvasElement}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 147,
            "description": "The SceneJS scene graph that renders 3D content for this Viewer.",
            "itemtype": "property",
            "name": "scene",
            "final": 1,
            "type": "{SceneJS.Scene}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 215,
            "description": "ID of this Viewer",
            "itemtype": "property",
            "name": "id",
            "final": 1,
            "type": "{String}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 255,
            "description": "The {{#crossLink \"Component\"}}Components{{/crossLink}} within this Viewer, mapped to their IDs.",
            "itemtype": "property",
            "name": "components",
            "final": 1,
            "type": "{{String:Component}}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 263,
            "description": "Map of components that have an 'exclusive' property. This is used to ensure that\nonly one of these component types is active within this Viewer at a time.",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 269,
            "description": "The {{#crossLink \"Component\"}}Components{{/crossLink}} within this Viewer, mapped to their class names.",
            "itemtype": "property",
            "name": "classes",
            "final": 1,
            "type": "{{String:{String:Component}}}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 278,
            "description": "The {{#crossLink \"Component\"}}Components{{/crossLink}} within this Viewer, mapped to their IFC type names.",
            "itemtype": "property",
            "name": "types",
            "final": 1,
            "type": "{{String:{String:Component}}}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 331,
            "description": "Geometry loaders",
            "itemtype": "property",
            "name": "geometryLoaders",
            "type": "{Array of }",
            "final": 1,
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 353,
            "description": "Canvas manager for this Viewer.",
            "itemtype": "property",
            "name": "canvas",
            "final": 1,
            "type": "{BIMSURFER.Canvas}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 361,
            "description": "Input handling for this Viewer.",
            "itemtype": "property",
            "name": "input",
            "final": 1,
            "type": "{BIMSURFER.Input}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 369,
            "description": "Cursor icon control for this Viewer.",
            "itemtype": "property",
            "name": "cursor",
            "final": 1,
            "type": "{BIMSURFER.Cursor}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 377,
            "description": "The default {{#crossLink \"Camera\"}}{{/crossLink}} for this Viewer.\n\nThis {{#crossLink \"Camera\"}}{{/crossLink}} is active by default, and becomes inactive\nas soon as you activate some other {{#crossLink \"Camera\"}}{{/crossLink}} in this Viewer.\n\nAny components that you create for this Viewer, that require a {{#crossLink \"Camera\"}}{{/crossLink}},\nwill fall back on this one by default.",
            "itemtype": "property",
            "name": "camera",
            "final": 1,
            "type": "{BIMSURFER.Camera}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 392,
            "description": "The number of {{#crossLink \"Objects\"}}{{/crossLink}} within this ObjectSet.",
            "itemtype": "property",
            "name": "numObjects",
            "type": "Number",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 408,
            "description": "Adds a {{#crossLink \"Component\"}}{{/crossLink}} to this viewer.\n\nThis is called within the constructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.\n\nThe {{#crossLink \"Component\"}}{{/crossLink}} is assigned a\nunique {{#crossLink \"Component/id:property\"}}{{/crossLink}} if it does not yet have one.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "component",
                    "description": "The Component to add.",
                    "type": "BIMSURFER.Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 482,
            "description": "Fired whenever a Component has been created within this Viewer.",
            "itemtype": "event",
            "name": "componentCreated",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was created",
                    "type": "Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 500,
            "description": "Removes a {{#crossLink \"Component\"}}{{/crossLink}} from this Viewer.\n\nThis is called within the destructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "component",
                    "description": "The component to remove",
                    "type": "BIMSURFER.Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 534,
            "description": "Fired whenever a component within this Viewer has been destroyed.",
            "itemtype": "event",
            "name": "componentDestroyed",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was destroyed",
                    "type": "Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 542,
            "description": "World-space origin.",
            "itemtype": "property",
            "name": "origin",
            "final": 1,
            "type": "{*}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 564,
            "description": "This Viewer's view transformation matrix.",
            "itemtype": "property",
            "name": "viewMatrix",
            "final": 1,
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 582,
            "description": "This Viewer's projection transformation matrix.",
            "itemtype": "property",
            "name": "projMatrix",
            "final": 1,
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 599,
            "description": "Boundary of all bounded components in this Viewer.",
            "itemtype": "property",
            "name": "boundary",
            "final": 1,
            "type": "{*}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 620,
            "description": "Center of all bounded components in this Viewer.",
            "itemtype": "property",
            "name": "center",
            "final": 1,
            "type": "{*}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 716,
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 738,
            "description": "Resizes the viewport and updates the aspect ratio",
            "params": [
                {
                    "name": "width",
                    "description": "The new width in px",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new height in px",
                    "type": "Number"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 766,
            "description": "Iterates with a callback over Components of the given classes",
            "params": [
                {
                    "name": "classNames",
                    "description": "List of class names",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback called for each Component of the given classes",
                    "type": "Function"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 787,
            "description": "Iterates with a callback over Components of the given IFC types",
            "params": [
                {
                    "name": "typeNames",
                    "description": "List of type names",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback called for each Component of the given types",
                    "type": "Function"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 808,
            "description": "Shows an IFC type of a revision.",
            "params": [
                {
                    "name": "typeNames",
                    "description": "Names of types to hide",
                    "type": "Array of String"
                },
                {
                    "name": "revision",
                    "description": "The revision",
                    "type": "BIMSURFER.ProjectRevision instance"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 822,
            "description": "Hides an IFC type of a revision.",
            "params": [
                {
                    "name": "typeNames",
                    "description": "Names of types to hide",
                    "type": "Array of String"
                },
                {
                    "name": "revision",
                    "description": "The revision",
                    "type": "BIMSURFER.ProjectRevision instance"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 835,
            "description": "Hides all the types of a revision",
            "params": [
                {
                    "name": "revision",
                    "description": "The revision to hide",
                    "type": "BIMSURFER.ProjectRevision"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 847,
            "description": "Shows a revision",
            "params": [
                {
                    "name": "revision",
                    "description": "The revision to show",
                    "type": "BIMSURFER.ProjectRevision"
                },
                {
                    "name": "types",
                    "description": "The types to show (default = BIMSURFER.constants.defaultTypes)",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 876,
            "description": "Fires an event on this Viewer.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 903,
            "description": "Subscribes to an event on this Viewer.\n\nThe callback is be called with this Viewer as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "Publication event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 933,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Viewer/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Viewer/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 952,
            "description": "Subscribes to the next occurrence of the given event on this Viewer, then un-subscribes as soon as the event is handled.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 970,
            "description": "Logs a console debugging message for this View.\n\nThe console message will have this format: *````[LOG] BIMSERVER.Viewer: <message>````*",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/viewer/viewer.js",
            "line": 982,
            "description": "Logs an error for this View to the JavaScript console.\n\nThe console message will have this format: *````[ERROR] BIMSERVER.Viewer: <message>````*",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/viewer/configs/constants.js:144"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/viewer/math/math.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/viewer/reporting/tasks.js:94"
        },
        {
            "message": "Missing item type\nAnimates a {@link BIMSURFER.Camera} along a path.",
            "line": " src/viewer/animation/cameraPathAnimation.js:5"
        },
        {
            "message": "Missing item type\nConstructor.",
            "line": " src/viewer/animation/cameraPathAnimation.js:15"
        },
        {
            "message": "Missing item type\nActivates this camera",
            "line": " src/viewer/animation/cameraPathAnimation.js:24"
        },
        {
            "message": "Missing item type\nInitializes the events necessary for the operation of this control",
            "line": " src/viewer/animation/cameraPathAnimation.js:50"
        },
        {
            "message": "Missing item type\nDefines a viewpoint within a {@link Viewer}.",
            "line": " src/viewer/camera/camera.js:97"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look', around the 'up' vector",
            "line": " src/viewer/camera/camera.js:153"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/viewer/camera/camera.js:173"
        },
        {
            "message": "Missing item type\nRotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "line": " src/viewer/camera/camera.js:199"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/viewer/camera/camera.js:221"
        },
        {
            "message": "Missing item type\nPans the camera along X and Y axis.",
            "line": " src/viewer/camera/camera.js:247"
        },
        {
            "message": "Missing item type\nIncrements/decrements zoom factor, ie. distance between eye and look.",
            "line": " src/viewer/camera/camera.js:301"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/configs/configs.js:30"
        },
        {
            "message": "Missing item type\nThe properties",
            "line": " src/viewer/configs/configs.js:43"
        },
        {
            "message": "Missing item type\nTime in milliseconds before a connect or login action will timeout",
            "line": " src/viewer/configs/constants.js:12"
        },
        {
            "message": "Missing item type\nReturns a number whose value is limited to the given range.\n\nExample: limit the output of this computation to between 0 and 255\n(x * 255).clamp(0, 255)",
            "line": " src/viewer/configs/constants.js:144"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/input/input.js:111"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/input/input.js:117"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/input/input.js:123"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/input/input.js:129"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/input/input.js:135"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/input/input.js:141"
        },
        {
            "message": "Missing item type\nEnable or disable all input handlers",
            "line": " src/viewer/input/input.js:381"
        },
        {
            "message": "Missing item type\nReads an object from binary data packet.",
            "line": " src/viewer/loading/download.js:469"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:83"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:90"
        },
        {
            "message": "Missing item type\nFloating-point modulus",
            "line": " src/viewer/math/math.js:97"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:410"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:427"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:444"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:463"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:497"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:516"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:521"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:526"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:531"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:536"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:541"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:546"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:551"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:556"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:566"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:577"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:589"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:591"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:596"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:605"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:615"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:620"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:625"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:635"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:640"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:645"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:650"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:661"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:690"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:720"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:750"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:755"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:785"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:815"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:845"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:888"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:918"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:934"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:981"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:996"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1047"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1052"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1061"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1066"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1071"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1119"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1124"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1133"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1138"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1143"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1236"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1241"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1273"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1309"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1337"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1354"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1366"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1397"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1417"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1423"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1436"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/math/math.js:1443"
        },
        {
            "message": "Missing item type\nThe {{#crossLink \"Objects\"}}{{/crossLink}} within this RandomObjects.",
            "line": " src/viewer/objects/randomObjects.js:74"
        },
        {
            "message": "Missing item type\nGeneric map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "line": " src/viewer/utils/map.js:7"
        },
        {
            "message": "Missing item type\nAdds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "line": " src/viewer/utils/map.js:21"
        },
        {
            "message": "Missing item type\nRemoves the item of the given ID from the map and returns it",
            "line": " src/viewer/utils/map.js:53"
        },
        {
            "message": "Missing item type\nWhen true, indicates that only one instance of this component type may be active within\nits {{#crossLink \"Viewer\"}}{{/crossLink}} at a time. When a component is activated, that has\na true value for this flag, then any other active component of the same type will be\ndeactivated first.",
            "line": " src/viewer/component.js:186"
        },
        {
            "message": "Missing item type\nInitializes this component",
            "line": " src/viewer/component.js:251"
        },
        {
            "message": "Missing item type\nMap of components that have an 'exclusive' property. This is used to ensure that\nonly one of these component types is active within this Viewer at a time.",
            "line": " src/viewer/viewer.js:263"
        },
        {
            "message": "Missing item type\nAdds a {{#crossLink \"Component\"}}{{/crossLink}} to this viewer.\n\nThis is called within the constructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.\n\nThe {{#crossLink \"Component\"}}{{/crossLink}} is assigned a\nunique {{#crossLink \"Component/id:property\"}}{{/crossLink}} if it does not yet have one.",
            "line": " src/viewer/viewer.js:408"
        },
        {
            "message": "Missing item type\nRemoves a {{#crossLink \"Component\"}}{{/crossLink}} from this Viewer.\n\nThis is called within the destructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.",
            "line": " src/viewer/viewer.js:500"
        },
        {
            "message": "Missing item type",
            "line": " src/viewer/viewer.js:716"
        },
        {
            "message": "Missing item type\nResizes the viewport and updates the aspect ratio",
            "line": " src/viewer/viewer.js:738"
        },
        {
            "message": "Missing item type\nIterates with a callback over Components of the given classes",
            "line": " src/viewer/viewer.js:766"
        },
        {
            "message": "Missing item type\nIterates with a callback over Components of the given IFC types",
            "line": " src/viewer/viewer.js:787"
        },
        {
            "message": "Missing item type\nShows an IFC type of a revision.",
            "line": " src/viewer/viewer.js:808"
        },
        {
            "message": "Missing item type\nHides an IFC type of a revision.",
            "line": " src/viewer/viewer.js:822"
        },
        {
            "message": "Missing item type\nHides all the types of a revision",
            "line": " src/viewer/viewer.js:835"
        },
        {
            "message": "Missing item type\nShows a revision",
            "line": " src/viewer/viewer.js:847"
        }
    ]
}